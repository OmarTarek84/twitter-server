{"version":3,"sources":["components/Auth/Signup/Signup.js","store/Actions/user.js","components/Auth/Helpers/Input/Input.js","components/Auth/Helpers/Form/Form.js"],"names":["Signup","dispatch","useDispatch","errorMessage","useSelector","state","user","useEffect","type","CLEAR_USER_ERROR","className","submitForm","formData","signup","defaultValues","firstName","lastName","userName","email","password","confirmPassword","inputs","name","placeholder","validationRules","required","pattern","value","message","submitBtnText","to","getState","a","axios","post","history","push","USER_ERROR","response","data","login","AUTH_LOADING","localStorage","setItem","accessToken","userDetails","username","profilePic","LOGIN","token","pinPostUser","postId","put","headers","Authorization","getItem","console","log","PIN_POST","pinnedPost","pintype","searchUsers","currentPage","pageSize","search","USERS_LOADING","get","FETCH_USERS","currentPageUser","pageSizeUser","pagesUser","pages","totalItemsCountUser","totalItemsCount","Input","register","errors","ref","Form","authLoading","useForm","handleSubmit","watch","renderInputs","map","input","validate","onSubmit","Spinner","width"],"mappings":"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","file":"static/js/11.9c8aae50.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CLEAR_USER_ERROR } from \"../../../store/Actions/actionTypes\";\r\nimport { signup } from \"../../../store/Actions/user\";\r\nimport Form from \"../Helpers/Form/Form\";\r\nimport \"./Signup.scss\";\r\n\r\nconst Signup = () => {\r\n  const dispatch = useDispatch();\r\n  const { errorMessage } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    dispatch({type: CLEAR_USER_ERROR});\r\n  }, [dispatch]);\r\n\r\n  const defaultValues = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    userName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n\r\n  const inputs = [\r\n    {\r\n      name: \"firstName\",\r\n      placeholder: \"First Name\",\r\n      type: \"text\",\r\n      validationRules: {\r\n        required: \"First Name Is Required\",\r\n        pattern: /^[A-Za-z]+$/i,\r\n      },\r\n    },\r\n    {\r\n      name: \"lastName\",\r\n      placeholder: \"Last Name\",\r\n      type: \"text\",\r\n      validationRules: {\r\n        required: \"Last Name Is Required\",\r\n        pattern: /^[A-Za-z]+$/i,\r\n      },\r\n    },\r\n    {\r\n      name: \"userName\",\r\n      placeholder: \"User Name\",\r\n      type: \"text\",\r\n      validationRules: {\r\n        required: \"User Name Is Required\",\r\n      },\r\n    },\r\n    {\r\n      name: \"email\",\r\n      placeholder: \"Email\",\r\n      type: \"email\",\r\n      validationRules: {\r\n        required: \"Email Is Required\",\r\n        pattern: {\r\n          value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n          message: \"Entered value does not match email format\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: \"password\",\r\n      placeholder: \"Password\",\r\n      type: \"password\",\r\n      validationRules: {\r\n        required: \"Password Is Required\",\r\n      },\r\n    },\r\n    {\r\n      name: \"confirmPassword\",\r\n      placeholder: \"Confirm Password\",\r\n      type: \"password\",\r\n      validationRules: {\r\n        required: \"Confirm Password Is Required\",\r\n      },\r\n    },\r\n  ];\r\n\r\n  const submitForm = (formData) => {\r\n    dispatch(signup(formData));\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h2>Register</h2>\r\n      <Form\r\n        submitForm={submitForm}\r\n        errorMessage={errorMessage}\r\n        defaultValues={defaultValues}\r\n        inputs={inputs}\r\n        submitBtnText='Register'\r\n      />\r\n      <Link to=\"/login\">Already Have Account? Please Login</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import axios from '../../axios';\r\nimport { AUTH_LOADING, FETCH_USERS, LOGIN, PIN_POST, USERS_LOADING, USER_ERROR } from './actionTypes';\r\nimport history from '../../history';\r\n\r\nexport const signup = formData => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            await axios.post('/auth/signup', formData);\r\n            history.push('/login');\r\n        } catch(err) {\r\n            dispatch({\r\n                type: USER_ERROR,\r\n                errorMessage: err.response && err.response.data && err.response.data.message ? err.response.data.message: err.message\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const login = formData => {\r\n    return async (dispatch, getState) => {\r\n        dispatch({\r\n            type: AUTH_LOADING\r\n        });\r\n        try {\r\n            const response = await axios.post('/auth/login', formData);\r\n            localStorage.setItem('accessToken', response.data.accessToken);\r\n            localStorage.setItem('email', response.data.userDetails.email);\r\n            localStorage.setItem('userName', response.data.userDetails.username);\r\n            localStorage.setItem('firstName', response.data.userDetails.firstName);\r\n            localStorage.setItem('lastName', response.data.userDetails.lastName);\r\n            localStorage.setItem('profilePic', response.data.userDetails.profilePic);\r\n            history.push('/');\r\n            dispatch({\r\n                type: LOGIN,\r\n                token: response.data.accessToken,\r\n                userDetails: response.data.userDetails\r\n            });\r\n        } catch(err) {\r\n            dispatch({\r\n                type: USER_ERROR,\r\n                errorMessage: err.response && err.response.data && err.response.data.message ? err.response.data.message: err.message\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport const pinPostUser = postId => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const response = await axios.put('/user/pinPost', {postId}, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + (getState().user.token || localStorage.getItem('accessToken'))\r\n                }\r\n            });\r\n            console.log(response.data);\r\n            dispatch({\r\n                type: PIN_POST,\r\n                pinnedPost: response.data.pinnedPost,\r\n                pintype: response.data.type\r\n            });\r\n        } catch(err) {\r\n            dispatch({\r\n                type: USER_ERROR,\r\n                errorMessage: err.response && err.response.data && err.response.data.message ? err.response.data.message: err.message\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport const searchUsers = (currentPage, pageSize, search) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({\r\n                type: USERS_LOADING\r\n            });\r\n            const response = await axios.get(`/user/search?currentPage=${currentPage}&pageSize=${pageSize}&search=${search}`, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + (getState().user.token || localStorage.getItem('accessToken'))\r\n                }\r\n            });\r\n            console.log(response.data);\r\n            dispatch({\r\n                type: FETCH_USERS,\r\n                userDetails: response.data.userDetails,\r\n                currentPageUser: response.data.currentPage,\r\n                pageSizeUser: response.data.pageSize,\r\n                pagesUser: response.data.pages,\r\n                totalItemsCountUser: response.data.totalItemsCount,\r\n            });\r\n        } catch(err) {\r\n            dispatch({\r\n                type: USER_ERROR,\r\n                errorMessage: err.response && err.response.data && err.response.data.message ? err.response.data.message: err.message\r\n            });\r\n        }\r\n    };\r\n};","import React from \"react\";\r\nimport \"./Input.scss\";\r\n\r\nconst Input = ({type, name, placeholder, validationRules, register, errors}) => {\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        ref={register(validationRules)}\r\n      />\r\n      {errors && errors[name] && (\r\n        <p className=\"error\">{errors[name].message}</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport \"./Form.scss\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Input from \"../Input/Input\";\r\nimport Spinner from '../../../Spinner/Spinner';\r\n\r\nconst Form = ({ submitForm, defaultValues, inputs, errorMessage, submitBtnText, authLoading }) => {\r\n  const { handleSubmit, register, errors, watch } = useForm({\r\n    defaultValues: defaultValues,\r\n  });\r\n\r\n  const renderInputs = inputs.map((input) => {\r\n    return (\r\n      <div className=\"inputParent\" key={input.name}>\r\n        <Input\r\n          type={input.type}\r\n          placeholder={input.placeholder}\r\n          name={input.name}\r\n          validationRules={\r\n            input.name === \"confirmPassword\" ? {\r\n                ...input.validationRules,\r\n                validate: (value) => value === watch('password') || \"Passwords don't match.\"\r\n            } : input.validationRules\r\n          }\r\n          register={register}\r\n          errors={errors}\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(submitForm)}>\r\n      {renderInputs}\r\n      {errorMessage && <p className=\"err\">{errorMessage}</p>}\r\n      {\r\n        authLoading ?\r\n        <Spinner width=\"40px\" />:\r\n        <button type=\"submit\">{submitBtnText}</button>\r\n      }\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"sourceRoot":""}
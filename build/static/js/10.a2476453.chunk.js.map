{"version":3,"sources":["components/Auth/Login/Login.js","store/Actions/user.js","components/Auth/Helpers/Input/Input.js","components/Auth/Helpers/Form/Form.js"],"names":["Login","useSelector","state","user","errorMessage","authLoading","dispatch","useDispatch","useEffect","type","CLEAR_USER_ERROR","className","submitForm","formData","login","defaultValues","email","password","inputs","name","placeholder","validationRules","required","pattern","value","message","submitBtnText","to","signup","getState","a","axios","post","history","push","USER_ERROR","response","data","AUTH_LOADING","localStorage","setItem","accessToken","userDetails","username","firstName","lastName","profilePic","LOGIN","token","pinPostUser","postId","put","headers","Authorization","getItem","console","log","PIN_POST","pinnedPost","pintype","searchUsers","currentPage","pageSize","search","USERS_LOADING","get","FETCH_USERS","currentPageUser","pageSizeUser","pagesUser","pages","totalItemsCountUser","totalItemsCount","Input","register","errors","ref","Form","useForm","handleSubmit","watch","renderInputs","map","input","validate","onSubmit","Spinner","width"],"mappings":"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","file":"static/js/10.a2476453.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CLEAR_USER_ERROR } from \"../../../store/Actions/actionTypes\";\r\nimport { login } from \"../../../store/Actions/user\";\r\nimport Form from \"../Helpers/Form/Form\";\r\nimport \"./Login.scss\";\r\n\r\nconst Login = () => {\r\n\r\n  const { errorMessage, authLoading } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch({type: CLEAR_USER_ERROR});\r\n  }, [dispatch]);\r\n\r\n  const defaultValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const inputs = [\r\n    {\r\n      name: \"email\",\r\n      placeholder: \"Email\",\r\n      type: \"email\",\r\n      validationRules: {\r\n        required: \"Email Is Required\",\r\n        pattern: {\r\n          value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n          message: \"Entered value does not match email format\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: \"password\",\r\n      placeholder: \"Password\",\r\n      type: \"password\",\r\n      validationRules: {\r\n        required: \"Password Is Required\",\r\n      },\r\n    },\r\n  ];\r\n\r\n  const submitForm = (formData) => {\r\n    dispatch(login(formData));\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h2>Login</h2>\r\n      <Form\r\n        submitForm={submitForm}\r\n        defaultValues={defaultValues}\r\n        inputs={inputs}\r\n        submitBtnText='Login'\r\n        errorMessage={errorMessage}\r\n        authLoading={authLoading}\r\n      />\r\n      <Link to=\"/signup\">Don't Have Account? Create New Account</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import axios from '../../axios';\r\nimport { AUTH_LOADING, FETCH_USERS, LOGIN, PIN_POST, USERS_LOADING, USER_ERROR } from './actionTypes';\r\nimport history from '../../history';\r\n\r\nexport const signup = formData => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            await axios.post('/auth/signup', formData);\r\n            history.push('/login');\r\n        } catch(err) {\r\n            dispatch({\r\n                type: USER_ERROR,\r\n                errorMessage: err.response && err.response.data && err.response.data.message ? err.response.data.message: err.message\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const login = formData => {\r\n    return async (dispatch, getState) => {\r\n        dispatch({\r\n            type: AUTH_LOADING\r\n        });\r\n        try {\r\n            const response = await axios.post('/auth/login', formData);\r\n            localStorage.setItem('accessToken', response.data.accessToken);\r\n            localStorage.setItem('email', response.data.userDetails.email);\r\n            localStorage.setItem('userName', response.data.userDetails.username);\r\n            localStorage.setItem('firstName', response.data.userDetails.firstName);\r\n            localStorage.setItem('lastName', response.data.userDetails.lastName);\r\n            localStorage.setItem('profilePic', response.data.userDetails.profilePic);\r\n            history.push('/');\r\n            dispatch({\r\n                type: LOGIN,\r\n                token: response.data.accessToken,\r\n                userDetails: response.data.userDetails\r\n            });\r\n        } catch(err) {\r\n            dispatch({\r\n                type: USER_ERROR,\r\n                errorMessage: err.response && err.response.data && err.response.data.message ? err.response.data.message: err.message\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport const pinPostUser = postId => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const response = await axios.put('/user/pinPost', {postId}, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + (getState().user.token || localStorage.getItem('accessToken'))\r\n                }\r\n            });\r\n            console.log(response.data);\r\n            dispatch({\r\n                type: PIN_POST,\r\n                pinnedPost: response.data.pinnedPost,\r\n                pintype: response.data.type\r\n            });\r\n        } catch(err) {\r\n            dispatch({\r\n                type: USER_ERROR,\r\n                errorMessage: err.response && err.response.data && err.response.data.message ? err.response.data.message: err.message\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport const searchUsers = (currentPage, pageSize, search) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({\r\n                type: USERS_LOADING\r\n            });\r\n            const response = await axios.get(`/user/search?currentPage=${currentPage}&pageSize=${pageSize}&search=${search}`, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + (getState().user.token || localStorage.getItem('accessToken'))\r\n                }\r\n            });\r\n            console.log(response.data);\r\n            dispatch({\r\n                type: FETCH_USERS,\r\n                userDetails: response.data.userDetails,\r\n                currentPageUser: response.data.currentPage,\r\n                pageSizeUser: response.data.pageSize,\r\n                pagesUser: response.data.pages,\r\n                totalItemsCountUser: response.data.totalItemsCount,\r\n            });\r\n        } catch(err) {\r\n            dispatch({\r\n                type: USER_ERROR,\r\n                errorMessage: err.response && err.response.data && err.response.data.message ? err.response.data.message: err.message\r\n            });\r\n        }\r\n    };\r\n};","import React from \"react\";\r\nimport \"./Input.scss\";\r\n\r\nconst Input = ({type, name, placeholder, validationRules, register, errors}) => {\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        ref={register(validationRules)}\r\n      />\r\n      {errors && errors[name] && (\r\n        <p className=\"error\">{errors[name].message}</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport \"./Form.scss\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Input from \"../Input/Input\";\r\nimport Spinner from '../../../Spinner/Spinner';\r\n\r\nconst Form = ({ submitForm, defaultValues, inputs, errorMessage, submitBtnText, authLoading }) => {\r\n  const { handleSubmit, register, errors, watch } = useForm({\r\n    defaultValues: defaultValues,\r\n  });\r\n\r\n  const renderInputs = inputs.map((input) => {\r\n    return (\r\n      <div className=\"inputParent\" key={input.name}>\r\n        <Input\r\n          type={input.type}\r\n          placeholder={input.placeholder}\r\n          name={input.name}\r\n          validationRules={\r\n            input.name === \"confirmPassword\" ? {\r\n                ...input.validationRules,\r\n                validate: (value) => value === watch('password') || \"Passwords don't match.\"\r\n            } : input.validationRules\r\n          }\r\n          register={register}\r\n          errors={errors}\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(submitForm)}>\r\n      {renderInputs}\r\n      {errorMessage && <p className=\"err\">{errorMessage}</p>}\r\n      {\r\n        authLoading ?\r\n        <Spinner width=\"40px\" />:\r\n        <button type=\"submit\">{submitBtnText}</button>\r\n      }\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"sourceRoot":""}
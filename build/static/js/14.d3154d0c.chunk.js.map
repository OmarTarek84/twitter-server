{"version":3,"sources":["store/Actions/chat.js","components/PostsTabs/Tabs.js","components/ImageUploadModal/ImageUploadModal.js","pages/Profile/Profile.js"],"names":["getChatMsgs","chatId","currentPage","pageSize","dispatch","getState","a","type","CHAT_LOADING","token","user","localStorage","getItem","axios","get","headers","Authorization","data","FETCH_CHAT_MESSAGES","chat","messages","pages","messagesCount","CHAT_MESSAGES_ERROR","error","response","message","createChat","users","isGroupChat","post","CREATE_CHAT","result","console","log","changeChatName","chatName","put","CHANGE_CHAT_NAME","sendMessage","content","newDate","Date","toISOString","SEND_MESSAGE","_id","createdAt","updatedAt","sender","coverPhoto","userDetails","firstName","lastName","profilePic","username","readBy","UPDATE_LATEST_MESSAGE","SEND_MESSAGE_ERROR","msgId","timeDifference","current","previous","msPerMinute","msPerHour","msPerDay","msPerMonth","msPerYear","elapsed","Math","round","TabsPosts","posts","deletePostReqGoHome","retweetReq","viewSinglePostReq","likePostReq","postActionLoading","retweetActionLoading","selectTabIndex","goToProfile","submitReplyReq","disableReply","pinPost","pinnedPostId","renderPosts","map","Post","postId","postedBy","retweetData","likes","loggedInUsername","retweetUsers","combineretweetsAndPosts","replyTo","replyToUsername","originalPost","replyPostTypeReplyToUsername","deletePost","onSelect","ImageUploadModal","closeUploadModal","uploadProfilePic","photoType","useState","upImg","setUpImg","imgRef","useRef","previewCanvasRef","unit","width","aspect","crop","setCrop","completedCrop","setCompletedCrop","onLoad","useCallback","img","useEffect","image","canvas","scaleX","naturalWidth","scaleY","naturalHeight","height","ctx","getContext","pixelRatio","window","devicePixelRatio","setTransform","imageSmoothingQuality","drawImage","x","y","className","onClick","name","accept","onChange","e","target","files","length","reader","FileReader","addEventListener","readAsDataURL","ref","style","src","onImageLoaded","c","onComplete","disabled","toDataURL","initialState","userLoading","profile","combinedPostsAndRetweets","followLoading","imageUploadProgressRunning","imageUploadProgress","reducer","state","action","retweets","combinedPostsAndRetweetsForRetweet","targetedPostIndexForRetweet","findIndex","o","postretweetUsers","u","filter","unshift","postsArray","tabIndex","replies","targetedPostIndex","allPostLikes","likeUserFoundIndex","like","splice","push","allReplies","foundReplyPostIndex","r","replyPostId","resType","followers","follower","p","progress","Profile","props","useReducer","profileState","settabIndex","ifFollowing","setifFollowing","open","modalOpen","setModalOpen","pinToastId","replyToastId","retweetToastId","socket","useSocket","dispatch2","useDispatch","useSelector","chatLoading","originalPostId","postedByUsername","likePost","emit","notificationFrom","notificationTo","toast","warning","retweetPost","then","dismiss","success","history","backgroundGreenPostId","tabindex","formData","replyPost","reply","goToFollowList","index","following","pinPostUser","followUser","FOLLOW_USER","newfollowingUser","email","openUploadModal","chatWithUser","disResult","match","params","Error","followUserBool","getProfile","urltoFile","url","filename","mimeType","fetch","res","arrayBuffer","File","fileUploadProgress","progressEvent","percentageLoaded","loaded","total","base64DataUrl","imagePath","fileObj","onUploadProgress","CHANGE_PROFILE_PIC","getTime","CHANGE_COVER_PHOTO","Spinner","backgroundColor","display","alt","WebkitFilter","msFilter","percent","strokeWidth","strokeColor","color","marginTop","pinnedPost"],"mappings":"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","file":"static/js/14.d3154d0c.chunk.js","sourcesContent":["import axios from \"../../axios\";\r\nimport socketIOClient from 'socket.io-client';\r\nimport {\r\n  CHANGE_CHAT_NAME,\r\n  CHAT_LOADING,\r\n  CHAT_MESSAGES_ERROR,\r\n  CREATE_CHAT,\r\n  FETCH_CHAT_MESSAGES,\r\n  SEND_MESSAGE,\r\n  SEND_MESSAGE_ERROR,\r\n  UPDATE_LATEST_MESSAGE,\r\n} from \"./actionTypes\";\r\n\r\nexport const getChatMsgs = (chatId, currentPage, pageSize) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      if (currentPage === 1) {\r\n        dispatch({ type: CHAT_LOADING });\r\n      }\r\n      const token =\r\n        getState().user && getState().user.token\r\n          ? getState().user.token\r\n          : localStorage.getItem(\"accessToken\");\r\n      const { data } = await axios.get(`/chat/getMessages?chatId=${chatId}&currentPage=${currentPage}&pageSize=${pageSize}`, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      });\r\n      // console.log(data);\r\n      dispatch({\r\n        type: FETCH_CHAT_MESSAGES,\r\n        chat: data.chat,\r\n        messages: data.messages,\r\n        currentPage: data.currentPage,\r\n        pages: data.pages,\r\n        messagesCount: data.messagesCount,\r\n        pageSize: data.pageSize\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: CHAT_MESSAGES_ERROR,\r\n        error:\r\n          err.response && err.response.data && err.response.data.message\r\n            ? err.response.data.message\r\n            : err.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createChat = (users, isGroupChat) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: CHAT_LOADING });\r\n      const { data } = await axios.post(\r\n        `/chat/createChat?isGroupChat=${isGroupChat}`,\r\n        { users },\r\n        {\r\n          headers: {\r\n            Authorization:\r\n              \"Bearer \" +\r\n              (getState().user.token || localStorage.getItem(\"accessToken\")),\r\n          },\r\n        }\r\n      );\r\n      const result = await dispatch({\r\n        type: CREATE_CHAT,\r\n        chat: data,\r\n      });\r\n      return result;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const changeChatName = (chatId, chatName) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      await axios.put(\r\n        `/chat/changeChatName?chatId=${chatId}`,\r\n        { chatName },\r\n        {\r\n          headers: {\r\n            Authorization:\r\n              \"Bearer \" +\r\n              (getState().user.token || localStorage.getItem(\"accessToken\")),\r\n          },\r\n        }\r\n      );\r\n      dispatch({\r\n        type: CHANGE_CHAT_NAME,\r\n        chatName: chatName,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const sendMessage = (chatId, content) => {\r\n  return async (dispatch, getState) => {\r\n    const newDate = new Date().toISOString();\r\n    dispatch({\r\n      type: SEND_MESSAGE,\r\n      message: {\r\n        content: content,\r\n        _id: newDate,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n        sender: {\r\n          coverPhoto: getState().user.userDetails.coverPhoto,\r\n          firstName: getState().user.userDetails.firstName,\r\n          lastName: getState().user.userDetails.lastName,\r\n          profilePic: getState().user.userDetails.profilePic,\r\n          username: getState().user.userDetails.username,\r\n        },\r\n        readBy: [],\r\n        chat: chatId,\r\n        error: false\r\n      },\r\n    });\r\n    try {\r\n      await axios.post(\r\n        `/chat/sendMessage?chatId=${chatId}`,\r\n        { content },\r\n        {\r\n          headers: {\r\n            Authorization:\r\n              \"Bearer \" +\r\n              (getState().user.token || localStorage.getItem(\"accessToken\")),\r\n          },\r\n        }\r\n      );\r\n      dispatch({\r\n          type: UPDATE_LATEST_MESSAGE,\r\n          content: content,\r\n          user: {\r\n            coverPhoto: getState().user.userDetails.coverPhoto,\r\n            firstName: getState().user.userDetails.firstName,\r\n            lastName: getState().user.userDetails.lastName,\r\n            profilePic: getState().user.userDetails.profilePic,\r\n            username: getState().user.userDetails.username,\r\n          },\r\n          chatId: chatId\r\n      });\r\n    } catch (err) {\r\n        console.log(err);\r\n      dispatch({\r\n        type: SEND_MESSAGE_ERROR,\r\n        msgId: newDate,\r\n      });\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport \"./Tabs.scss\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport Post from \"../Homepage/PostsList/Post/Post\";\r\n\r\nconst timeDifference = (current, previous) => {\r\n  const msPerMinute = 60 * 1000;\r\n  const msPerHour = msPerMinute * 60;\r\n  const msPerDay = msPerHour * 24;\r\n  const msPerMonth = msPerDay * 30;\r\n  const msPerYear = msPerDay * 365;\r\n\r\n  const elapsed = current - previous;\r\n\r\n  if (elapsed < msPerMinute) {\r\n    if (elapsed / 1000 < 30) return \"Just Now\";\r\n    return Math.round(elapsed / 1000) + \" seconds ago\";\r\n  } else if (elapsed < msPerHour) {\r\n    return Math.round(elapsed / msPerMinute) + \" minutes ago\";\r\n  } else if (elapsed < msPerDay) {\r\n    return Math.round(elapsed / msPerHour) + \" hours ago\";\r\n  } else if (elapsed < msPerMonth) {\r\n    return Math.round(elapsed / msPerDay) + \" days ago\";\r\n  } else if (elapsed < msPerYear) {\r\n    return Math.round(elapsed / msPerMonth) + \" months ago\";\r\n  } else {\r\n    return Math.round(elapsed / msPerYear) + \" years ago\";\r\n  }\r\n};\r\n\r\nconst TabsPosts = ({\r\n  posts,\r\n  deletePostReqGoHome,\r\n  retweetReq,\r\n  viewSinglePostReq,\r\n  likePostReq,\r\n  postActionLoading,\r\n  retweetActionLoading,\r\n  selectTabIndex,\r\n  goToProfile,\r\n  submitReplyReq,\r\n  disableReply,\r\n  pinPost,\r\n  pinnedPostId\r\n}) => {\r\n\r\n  const renderPosts = posts.map((post) => {\r\n    return (\r\n      <Post\r\n        key={post._id}\r\n        postId={post._id}\r\n        firstName={post.postedBy.firstName}\r\n        lastName={post.postedBy.lastName}\r\n        username={post.postedBy.username}\r\n        content={post.content}\r\n        createdAt={timeDifference(\r\n          new Date(),\r\n          new Date(post.content ? post.createdAt : post.retweetData.createdAt)\r\n        )}\r\n        profilePic={post.postedBy.profilePic}\r\n        likePostReq={likePostReq}\r\n        likes={post.likes}\r\n        postActionLoading={postActionLoading}\r\n        loggedInUsername={localStorage.getItem(\"userName\")}\r\n        retweetReq={retweetReq}\r\n        retweetActionLoading={retweetActionLoading}\r\n        retweetUsers={post.retweetUsers}\r\n        retweetData={post.retweetData}\r\n        combineretweetsAndPosts={true}\r\n        replyTo={post.replyTo || null}\r\n        replyToUsername={\r\n          post.replyTo && post.replyTo.originalPost\r\n            ? post.replyTo.originalPost.postedBy.username\r\n            : null\r\n        }\r\n        replyPostTypeReplyToUsername={post.postedBy.username}\r\n        viewSinglePostReq={() => viewSinglePostReq(post._id, post.replyTo ? post.replyTo.originalPost._id: null)}\r\n        deletePost={deletePostReqGoHome}\r\n        goToProfile={goToProfile}\r\n        disableReply={disableReply}\r\n        pinPost={() => pinPost(post._id)}\r\n        pinnedPostId={pinnedPostId}\r\n        submitReplyReq={submitReplyReq}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Tabs onSelect={selectTabIndex}>\r\n      <TabList>\r\n        <Tab>Posts</Tab>\r\n        <Tab>Replies</Tab>\r\n      </TabList>\r\n\r\n      <TabPanel>\r\n        {renderPosts}\r\n      </TabPanel>\r\n      <TabPanel>\r\n        {renderPosts}\r\n      </TabPanel>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default TabsPosts;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport \"./ImageUploadModal.scss\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\n\r\nconst ImageUploadModal = ({ closeUploadModal, uploadProfilePic, photoType }) => {\r\n  const [upImg, setUpImg] = useState();\r\n  const imgRef = useRef(null);\r\n  const previewCanvasRef = useRef(null);\r\n  const [crop, setCrop] = useState({ unit: \"%\", width: 30, aspect: photoType === 'profilePic' ? 16 / 16: 16 / 9 });\r\n  const [completedCrop, setCompletedCrop] = useState(null);\r\n\r\n  const onSelectFile = (e) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => setUpImg(reader.result));\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onLoad = useCallback((img) => {\r\n    imgRef.current = img;\r\n  }, []);\r\n\r\n  const uploadProfilePicReq = () => {\r\n    uploadProfilePic(previewCanvasRef.current.toDataURL(), photoType);\r\n    closeUploadModal();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!completedCrop || !previewCanvasRef.current || !imgRef.current) {\r\n      return;\r\n    }\r\n\r\n    const image = imgRef.current;\r\n    const canvas = previewCanvasRef.current;\r\n    const crop = completedCrop;\r\n\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const pixelRatio = window.devicePixelRatio;\r\n\r\n    canvas.width = crop.width * pixelRatio;\r\n    canvas.height = crop.height * pixelRatio;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = \"high\";\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n  }, [completedCrop]);\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"backdrop\">\r\n      <div className=\"replyModal\">\r\n        <div className=\"titleP\">\r\n          <h2>Upload A new {photoType === 'profilePic' ? 'Profile Picture': 'Cover Photo'}</h2>\r\n          <i className=\"fa fa-times\" onClick={closeUploadModal}></i>\r\n        </div>\r\n        <div className=\"fileInput\">\r\n          <input\r\n            type=\"file\"\r\n            name=\"image\"\r\n            accept=\"image/*\"\r\n            onChange={onSelectFile}\r\n          />\r\n          <canvas\r\n            ref={previewCanvasRef}\r\n            // Rounding is important so the canvas width and height matches/is a multiple for sharpness.\r\n            style={{\r\n              width: Math.round(completedCrop?.width ?? 0),\r\n              height: Math.round(completedCrop?.height ?? 0),\r\n            }}\r\n          />\r\n          <ReactCrop\r\n            src={upImg}\r\n            onImageLoaded={onLoad}\r\n            crop={crop}\r\n            onChange={(c) => setCrop(c)}\r\n            onComplete={(c) => setCompletedCrop(c)}\r\n          />\r\n        </div>\r\n        <div className=\"btnActions\">\r\n          <button className=\"btn btn-primary upload\" disabled={!crop || !previewCanvasRef.current} onClick={uploadProfilePicReq}>\r\n            Upload\r\n          </button>\r\n          <button className=\"btn btn-danger\" onClick={closeUploadModal}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploadModal;\r\n","import React, { useEffect, useReducer, useRef, useState } from \"react\";\r\nimport \"./Profile.scss\";\r\nimport axios from \"../../axios\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport TabsPosts from \"../../components/PostsTabs/Tabs\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport history from \"../../history\";\r\nimport {\r\n  deletePost,\r\n  likePost,\r\n  replyPost,\r\n  retweetPost,\r\n} from \"../../store/Actions/post\";\r\nimport {\r\n  CHANGE_COVER_PHOTO,\r\n  CHANGE_PROFILE_PIC,\r\n  FOLLOW_USER,\r\n} from \"../../store/Actions/actionTypes\";\r\nimport ImageUploadModal from \"../../components/ImageUploadModal/ImageUploadModal\";\r\nimport { Circle } from \"rc-progress\";\r\nimport { pinPostUser } from \"../../store/Actions/user\";\r\nimport { toast } from \"react-toastify\";\r\nimport { createChat } from \"../../store/Actions/chat\";\r\nimport useSocket from \"../../shared/socketCustomHook\";\r\n\r\nconst initialState = {\r\n  userLoading: false,\r\n  profile: null,\r\n  error: null,\r\n  combinedPostsAndRetweets: [],\r\n  followLoading: false,\r\n  imageUploadProgressRunning: false,\r\n  imageUploadProgress: 0,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"user_loading\":\r\n      return {\r\n        ...state,\r\n        userLoading: true,\r\n        error: null,\r\n      };\r\n    case \"fetch_user\":\r\n      return {\r\n        ...state,\r\n        userLoading: false,\r\n        profile: action.profile,\r\n        combinedPostsAndRetweets: [\r\n          ...action.profile.posts,\r\n          ...action.profile.retweets,\r\n        ],\r\n        followLoading: false,\r\n      };\r\n    case \"user_error\":\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        userLoading: false,\r\n        followLoading: false,\r\n      };\r\n    case \"retweet\":\r\n      let combinedPostsAndRetweetsForRetweet = [\r\n        ...state.combinedPostsAndRetweets,\r\n      ];\r\n      const targetedPostIndexForRetweet = combinedPostsAndRetweetsForRetweet.findIndex(\r\n        (o) => o._id === action.postId\r\n      );\r\n      let postretweetUsers = [\r\n        ...combinedPostsAndRetweetsForRetweet[targetedPostIndexForRetweet]\r\n          .retweetUsers,\r\n      ];\r\n      const retweetUsersIndex = postretweetUsers.findIndex(\r\n        (u) => u.username === localStorage.getItem(\"userName\")\r\n      );\r\n      if (retweetUsersIndex > -1) {\r\n        postretweetUsers = postretweetUsers.filter(\r\n          (u) => u.username !== localStorage.getItem(\"userName\")\r\n        );\r\n      } else {\r\n        postretweetUsers.unshift({\r\n          firstName: localStorage.getItem(\"firstName\"),\r\n          lastName: localStorage.getItem(\"lastName\"),\r\n          username: localStorage.getItem(\"userName\"),\r\n          profilePic: localStorage.getItem(\"profilePic\"),\r\n        });\r\n      }\r\n      combinedPostsAndRetweetsForRetweet[\r\n        targetedPostIndexForRetweet\r\n      ].retweetUsers = postretweetUsers;\r\n      return {\r\n        ...state,\r\n        profile: {\r\n          ...state.profile,\r\n          combinedPostsAndRetweets: combinedPostsAndRetweetsForRetweet,\r\n        },\r\n      };\r\n    case \"like_post\":\r\n      let postsArray = [...state.combinedPostsAndRetweets];\r\n      if (action.tabIndex === 1) {\r\n        postsArray = [...state.profile.replies];\r\n      }\r\n      const targetedPostIndex = postsArray.findIndex(\r\n        (o) => o._id === action.postId\r\n      );\r\n      const allPostLikes = [...postsArray[targetedPostIndex].likes];\r\n      const likeUserFoundIndex = allPostLikes.findIndex(\r\n        (like) => like.username === localStorage.getItem(\"userName\")\r\n      );\r\n      if (likeUserFoundIndex > -1) {\r\n        allPostLikes.splice(likeUserFoundIndex, 1);\r\n      } else {\r\n        allPostLikes.push({\r\n          firstName: localStorage.getItem(\"firstName\"),\r\n          lastName: localStorage.getItem(\"lastName\"),\r\n          username: localStorage.getItem(\"userName\"),\r\n          profilePic: localStorage.getItem(\"profilePic\"),\r\n        });\r\n      }\r\n      postsArray[targetedPostIndex].likes = allPostLikes;\r\n      if (action.tabIndex === 0) {\r\n        return {\r\n          ...state,\r\n          combinedPostsAndRetweets: postsArray,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          profile: {\r\n            ...state.profile,\r\n            replies: postsArray,\r\n          },\r\n        };\r\n      }\r\n    case \"delete_reply_post\":\r\n      const allReplies = [...state.profile.replies];\r\n      const foundReplyPostIndex = allReplies.findIndex(\r\n        (r) => r._id === action.replyPostId\r\n      );\r\n      allReplies.splice(foundReplyPostIndex, 1);\r\n      return {\r\n        ...state,\r\n        profile: {\r\n          ...state.profile,\r\n          replies: [...allReplies],\r\n        },\r\n      };\r\n    case \"follow_loading\":\r\n      return {\r\n        ...state,\r\n        followLoading: true,\r\n      };\r\n    case \"follow_user\":\r\n      if (action.resType === \"Add\") {\r\n        return {\r\n          ...state,\r\n          profile: {\r\n            ...state.profile,\r\n            followers: [...state.profile.followers, action.follower],\r\n          },\r\n          followLoading: false,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          profile: {\r\n            ...state.profile,\r\n            followers: state.profile.followers.filter(\r\n              (p) => p.username !== action.follower.username\r\n            ),\r\n          },\r\n          followLoading: false,\r\n        };\r\n      }\r\n    case \"image_upload\":\r\n      return {\r\n        ...state,\r\n        imageUploadProgressRunning: true,\r\n        imageUploadProgress: action.progress,\r\n      };\r\n    case \"change_profile_pic\":\r\n      return {\r\n        ...state,\r\n        imageUploadProgressRunning: false,\r\n        imageUploadProgress: 0,\r\n        profile: {\r\n          ...state.profile,\r\n          profilePic: action.profilePic,\r\n        },\r\n      };\r\n    case \"change_cover_photo\":\r\n      return {\r\n        ...state,\r\n        imageUploadProgressRunning: false,\r\n        imageUploadProgress: 0,\r\n        profile: {\r\n          ...state.profile,\r\n          coverPhoto: action.coverPhoto,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Profile = (props) => {\r\n  const [profileState, dispatch] = useReducer(reducer, initialState);\r\n  const [tabIndex, settabIndex] = useState(0);\r\n  const [ifFollowing, setifFollowing] = useState(false);\r\n  const [modalOpen, setModalOpen] = useState({\r\n    open: false,\r\n    type: \"profilePic\",\r\n  });\r\n\r\n  const pinToastId = useRef();\r\n  const replyToastId = useRef();\r\n  const retweetToastId = useRef();\r\n\r\n  const {socket} = useSocket();\r\n\r\n  const dispatch2 = useDispatch();\r\n  const { postActionLoading, retweetActionLoading } = useSelector(\r\n    (state) => state.post\r\n  );\r\n  const { token, userDetails } = useSelector((state) => state.user);\r\n  const { chatLoading } = useSelector((state) => state.chat);\r\n\r\n  const likePostReq = (postId, originalPostId, postedByUsername) => {\r\n    dispatch2(likePost(postId, originalPostId));\r\n\r\n    // here if condition because there's already a reducer that does this dispatch in posts array\r\n    dispatch({\r\n      type: \"like_post\",\r\n      postId: postId,\r\n      tabIndex: tabIndex,\r\n    });\r\n    if (postedByUsername !== userDetails.username) {\r\n      socket.current.emit('notification Sent', {\r\n        notificationFrom: userDetails.username,\r\n        notificationTo: [postedByUsername],\r\n        type: 'like',\r\n        postId: postId\r\n      });\r\n    }\r\n  };\r\n\r\n  const retweetReq = (postId, originalPostId, postedByUsername) => {\r\n    retweetToastId.current = toast.warning(\"Submitting Your retweet...\");\r\n    dispatch2(retweetPost(postId, originalPostId)).then(() => {\r\n      toast.dismiss(retweetToastId.current);\r\n      toast.success(\"Retweet Success\");\r\n      if (postedByUsername !== userDetails.username) {\r\n        socket.current.emit('notification Sent', {\r\n          notificationFrom: userDetails.username,\r\n          notificationTo: [postedByUsername],\r\n          type: 'retweet',\r\n          postId: postId\r\n        });\r\n      }\r\n    });\r\n    dispatch({\r\n      type: \"retweet\",\r\n      postId: postId,\r\n    });\r\n  };\r\n\r\n  const deletePostReqGoHome = (postId, originalPostId) => {\r\n    dispatch({ type: \"delete_reply_post\", replyPostId: postId });\r\n    dispatch2(deletePost(postId, originalPostId));\r\n  };\r\n\r\n  const viewSinglePostReq = (postId, replyPostId) => {\r\n    history.push(`/post/${replyPostId || postId}`, {\r\n      postId: replyPostId || postId,\r\n      backgroundGreenPostId: postId,\r\n    });\r\n  };\r\n\r\n  const goToProfile = (username) => {\r\n    history.push(`/profile/${username}`);\r\n  };\r\n\r\n  const selectTabIndex = (tabindex) => {\r\n    settabIndex(tabindex);\r\n  };\r\n\r\n  const submitReplyReq = async (formData, postId, postedByUsername) => {\r\n    replyToastId.current = toast.warning(\"Submitting Your Reply...\");\r\n    const result = await dispatch2(replyPost(formData.reply, postId));\r\n    toast.dismiss(replyToastId.current);\r\n    toast.success(\"Reply Post Success\");\r\n    socket.current.emit('notification Sent', {\r\n      notificationFrom: userDetails.username,\r\n      notificationTo: [postedByUsername],\r\n      type: 'reply',\r\n      postId: postId\r\n    });\r\n    dispatch({\r\n      type: \"add_reply\",\r\n      reply: result.post,\r\n    });\r\n  };\r\n\r\n  const goToFollowList = (index) => {\r\n    history.push(`/profile/${profileState.profile.username}/follow`, {\r\n      tabIndex: index,\r\n      username: profileState.profile.username,\r\n      followers: profileState.profile.followers,\r\n      following: profileState.profile.following,\r\n      firstName: profileState.profile.firstName,\r\n      lastName: profileState.profile.lastName,\r\n    });\r\n  };\r\n\r\n  const pinPost = (postId) => {\r\n    pinToastId.current = toast.warning(\"Pinning Post...\");\r\n    dispatch2(pinPostUser(postId)).then(() => {\r\n      toast.dismiss(pinToastId.current);\r\n      toast.success(\"Pin Post Success\");\r\n    });\r\n  };\r\n\r\n  const followUser = async () => {\r\n    dispatch({\r\n      type: \"follow_loading\",\r\n    });\r\n    const response = await axios.put(\r\n      `/user/follow/${profileState.profile.username}`,\r\n      {},\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            \"Bearer \" + token || localStorage.getItem(\"accessToken\"),\r\n        },\r\n      }\r\n    );\r\n    dispatch2({\r\n      type: FOLLOW_USER,\r\n      newfollowingUser:\r\n        response.data && response.data.newfollowingUser\r\n          ? response.data.newfollowingUser\r\n          : null,\r\n    });\r\n    dispatch({\r\n      type: \"follow_user\",\r\n      follower: {\r\n        firstName: userDetails.firstName,\r\n        lastName: userDetails.lastName,\r\n        email: userDetails.email,\r\n        profilePic: userDetails.profilePic,\r\n        username: userDetails.username,\r\n      },\r\n      resType: response.data.type,\r\n    });\r\n    toast.success(\r\n      response.data.type === \"Add\"\r\n        ? `You are following ${response.data.newfollowingUser.firstName} ${response.data.newfollowingUser.lastName}`\r\n        : `You unfollowed ${response.data.newfollowingUser.firstName} ${response.data.newfollowingUser.lastName}`\r\n    );\r\n    if (response.data.type === \"Add\") {\r\n      socket.current.emit('notification Sent', {\r\n        notificationFrom: userDetails.username,\r\n        notificationTo: [response.data.newfollowingUser.username],\r\n        type: 'follow'\r\n      });\r\n      setifFollowing(true);\r\n    } else {\r\n      setifFollowing(false);\r\n    }\r\n  };\r\n\r\n  const openUploadModal = (photoType) => {\r\n    setModalOpen({\r\n      type: photoType,\r\n      open: true,\r\n    });\r\n  };\r\n\r\n  const closeUploadModal = () => {\r\n    setModalOpen({\r\n      type: \"profilePic\",\r\n      open: false,\r\n    });\r\n  };\r\n\r\n  const chatWithUser = async () => {\r\n    const disResult = await dispatch2(\r\n      createChat([profileState.profile.username], false)\r\n    );\r\n    history.push(`/chat/${disResult.chat._id}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getProfile = async () => {\r\n      dispatch({\r\n        type: \"user_loading\",\r\n      });\r\n      settabIndex(0);\r\n      try {\r\n        const response = await axios.get(\r\n          `/user/profile/${props.match.params.username}`,\r\n          {\r\n            headers: {\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\"),\r\n            },\r\n          }\r\n        );\r\n        if (!response.data.username) {\r\n          throw new Error();\r\n        }\r\n        dispatch({\r\n          type: \"fetch_user\",\r\n          profile: response.data,\r\n          likes: response.data.likes,\r\n          retweets: response.data.retweets,\r\n        });\r\n        console.log(response.data);\r\n        const followUserBool =\r\n          response.data.followers.findIndex(\r\n            (p) => p.username === localStorage.getItem(\"userName\")\r\n          ) > -1;\r\n        setifFollowing(followUserBool);\r\n      } catch (err) {\r\n        console.log(err);\r\n        dispatch({\r\n          type: \"user_error\",\r\n          error:\r\n            err.response && err.response.data && err.response.data.message\r\n              ? err.response.data.message\r\n              : err.message,\r\n        });\r\n      }\r\n    };\r\n    getProfile();\r\n  }, [props.match.params.username]);\r\n\r\n  const urltoFile = async (url, filename, mimeType) => {\r\n    const res = await fetch(url);\r\n    const arrayBuffer = await res.arrayBuffer();\r\n    return new File([arrayBuffer], filename, { type: mimeType });\r\n  };\r\n\r\n  const fileUploadProgress = (progressEvent) => {\r\n    const percentageLoaded = (progressEvent.loaded / progressEvent.total) * 100;\r\n    dispatch({\r\n      type: \"image_upload\",\r\n      progress: percentageLoaded,\r\n    });\r\n  };\r\n\r\n  const uploadProfilePic = async (base64DataUrl, photoType) => {\r\n    const response = await axios.get(\r\n      \"/user/getSignedUrl?photoType=\" + photoType,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            \"Bearer \" + (token ? token : localStorage.getItem(\"accessToken\")),\r\n        },\r\n      }\r\n    );\r\n    const { url, imagePath } = response.data;\r\n    console.log(response.data);\r\n    const fileObj = await urltoFile(\r\n      base64DataUrl,\r\n      `${userDetails.username || localStorage.getItem(\"userName\")}.png`,\r\n      \"image/png\"\r\n    );\r\n    try {\r\n      await axios.put(url, fileObj, {\r\n        headers: {\r\n          \"Content-Type\": \"image/png\",\r\n        },\r\n        onUploadProgress:\r\n          photoType === \"profilePic\" ? fileUploadProgress : null,\r\n      });\r\n\r\n      if (photoType === \"profilePic\") {\r\n        dispatch2({\r\n          type: CHANGE_PROFILE_PIC,\r\n          profilePic: imagePath + \"?\" + new Date().getTime(),\r\n        });\r\n        dispatch({\r\n          type: \"change_profile_pic\",\r\n          profilePic: imagePath + \"?\" + new Date().getTime(),\r\n        });\r\n        await axios.put(\r\n          \"/user/changeProfilePic\",\r\n          { imagePath: imagePath },\r\n          {\r\n            headers: {\r\n              Authorization:\r\n                \"Bearer \" +\r\n                (token ? token : localStorage.getItem(\"accessToken\")),\r\n            },\r\n          }\r\n        );\r\n      } else {\r\n        dispatch2({\r\n          type: CHANGE_COVER_PHOTO,\r\n          coverPhoto: imagePath + \"?\" + new Date().getTime(),\r\n        });\r\n        dispatch({\r\n          type: \"change_cover_photo\",\r\n          coverPhoto: imagePath + \"?\" + new Date().getTime(),\r\n        });\r\n        await axios.put(\r\n          \"/user/changeCoverPhoto\",\r\n          { imagePath: imagePath },\r\n          {\r\n            headers: {\r\n              Authorization:\r\n                \"Bearer \" +\r\n                (token ? token : localStorage.getItem(\"accessToken\")),\r\n            },\r\n          }\r\n        );\r\n      }\r\n      toast.success(\"Your photo has been changed\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const renderProfile = () => {\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"coverphoto\"\r\n          style={{\r\n            backgroundColor: !profileState.profile.coverPhoto && \"#00ACEE\",\r\n          }}\r\n        >\r\n          <button\r\n            className=\"cameraCoverPhoto\"\r\n            onClick={() => openUploadModal(\"coverPhoto\")}\r\n            style={{\r\n              display:\r\n                (profileState.profile.username !==\r\n                  localStorage.getItem(\"userName\") ||\r\n                  profileState.imageUploadProgressRunning) &&\r\n                \"none\",\r\n            }}\r\n            disabled={profileState.imageUploadProgressRunning}\r\n          >\r\n            <i className=\"fas fa-camera\"></i>\r\n          </button>\r\n          {profileState.profile.coverPhoto && (\r\n            <img\r\n              src={profileState.profile.coverPhoto}\r\n              alt={profileState.profile.username}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"profilePic\">\r\n          <img\r\n            src={profileState.profile.profilePic}\r\n            alt={profileState.profile.username}\r\n            style={{\r\n              WebkitFilter: profileState.imageUploadProgressRunning\r\n                ? \"blur(3px)\"\r\n                : \"none\",\r\n              filter: profileState.imageUploadProgressRunning\r\n                ? \"blur(3px)\"\r\n                : \"none\",\r\n              msFilter: profileState.imageUploadProgressRunning\r\n                ? \"blur(3px)\"\r\n                : \"none\",\r\n            }}\r\n          />\r\n          <button\r\n            className=\"camera\"\r\n            onClick={() => openUploadModal(\"profilePic\")}\r\n            style={{\r\n              display:\r\n                (profileState.profile.username !==\r\n                  localStorage.getItem(\"userName\") ||\r\n                  profileState.imageUploadProgressRunning) &&\r\n                \"none\",\r\n            }}\r\n            disabled={profileState.imageUploadProgressRunning}\r\n          >\r\n            <i className=\"fas fa-camera\"></i>\r\n          </button>\r\n          {profileState.imageUploadProgressRunning && (\r\n            <div className=\"progressCir\">\r\n              <Circle percent=\"70\" strokeWidth=\"4\" strokeColor=\"#00875D\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div\r\n          className=\"emailfollowing\"\r\n          style={{\r\n            display:\r\n              profileState.profile.username ===\r\n              (userDetails\r\n                ? userDetails.username\r\n                : localStorage.getItem(\"userName\"))\r\n                ? \"none\"\r\n                : \"flex\",\r\n          }}\r\n        >\r\n          {chatLoading ? (\r\n            <Spinner width=\"30px\" />\r\n          ) : (\r\n            <button className=\"email\" onClick={chatWithUser}>\r\n              <i className=\"fa fa-envelope\"></i>\r\n            </button>\r\n          )}\r\n          <button\r\n            className=\"follow\"\r\n            onClick={followUser}\r\n            disabled={profileState.followLoading}\r\n            style={{\r\n              backgroundColor: ifFollowing ? \"#00ACEE\" : \"white\",\r\n              color: ifFollowing ? \"white\" : \"#00ACEE\",\r\n            }}\r\n          >\r\n            {ifFollowing ? \"Following\" : \"Follow\"}\r\n          </button>\r\n        </div>\r\n        <div\r\n          className=\"userdetails\"\r\n          style={{\r\n            marginTop:\r\n              profileState.profile.username ===\r\n              (userDetails\r\n                ? userDetails.username\r\n                : localStorage.getItem(\"userName\"))\r\n                ? \"70px\"\r\n                : \"20px\",\r\n          }}\r\n        >\r\n          <p className=\"firstlastname\">\r\n            {profileState.profile.firstName} {profileState.profile.lastName}\r\n          </p>\r\n          <p className=\"username\">@{profileState.profile.username}</p>\r\n          <div className=\"followingfollowers\">\r\n            <p onClick={() => goToFollowList(0)}>\r\n              <span>{profileState.profile.following.length}</span> Following\r\n            </p>\r\n            <p onClick={() => goToFollowList(1)}>\r\n              <span>{profileState.profile.followers.length}</span> Followers\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"tabs\">\r\n          <TabsPosts\r\n            likePostReq={likePostReq}\r\n            viewSinglePostReq={viewSinglePostReq}\r\n            retweetReq={retweetReq}\r\n            deletePostReqGoHome={deletePostReqGoHome}\r\n            postActionLoading={postActionLoading}\r\n            retweetActionLoading={retweetActionLoading}\r\n            posts={\r\n              tabIndex === 0\r\n                ? profileState.combinedPostsAndRetweets\r\n                : profileState.profile.replies\r\n            }\r\n            selectTabIndex={selectTabIndex}\r\n            goToProfile={goToProfile}\r\n            disableReply={tabIndex === 1}\r\n            submitReplyReq={submitReplyReq}\r\n            pinnedPostId={\r\n              userDetails && userDetails.pinnedPost\r\n                ? userDetails.pinnedPost._id\r\n                : null\r\n            }\r\n            pinPost={pinPost}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      {!profileState.userLoading &&\r\n      profileState.profile &&\r\n      !profileState.error ? (\r\n        <>\r\n          <h2>\r\n            {profileState.profile.firstName} {profileState.profile.lastName}\r\n          </h2>\r\n          {renderProfile()}\r\n        </>\r\n      ) : profileState.userLoading && !profileState.error ? (\r\n        <Spinner width=\"60px\" />\r\n      ) : (\r\n        <h4 className=\"profileFetchError\">Error in Fetching Profile</h4>\r\n      )}\r\n      {modalOpen.open && (\r\n        <ImageUploadModal\r\n          token={token}\r\n          username={userDetails.username || localStorage.getItem(\"userName\")}\r\n          closeUploadModal={closeUploadModal}\r\n          uploadProfilePic={uploadProfilePic}\r\n          photoType={modalOpen.type}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"sourceRoot":""}
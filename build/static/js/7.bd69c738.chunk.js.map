{"version":3,"sources":["components/Paginate/Paginate.js","components/Users/User/User.js","components/SearchTabs/SearchTab.js","pages/Search/Search.js"],"names":["Paginate","handlePageChange","pageSize","totalItemsCount","currentPage","itemClass","linkClass","activePage","itemsCountPerPage","pageRangeDisplayed","onChange","User","username","profilePic","firstName","lastName","loggedinFollowing","followUser","followLoading","followIndex","userIndex","parentUserClicked","ifFollowing","findIndex","u","className","onClick","src","alt","to","e","stopPropagation","style","display","localStorage","getItem","backgroundColor","color","disabled","timeDifference","current","previous","msPerMinute","msPerHour","msPerDay","msPerMonth","msPerYear","elapsed","Math","round","SearchTab","selectTabIndex","posts","deletePost","retweetReq","viewSinglePostReq","likePostReq","postActionLoading","retweetActionLoading","goToProfile","submitReplyReq","disableReply","pinPost","pinnedPostId","postLoading","users","userLoading","renderPosts","map","post","Post","postId","_id","postedBy","content","createdAt","Date","retweetData","likes","loggedInUsername","retweetUsers","combineretweetsAndPosts","replyTo","replyToUsername","originalPost","replyPostTypeReplyToUsername","renderUserList","user","index","onSelect","Spinner","width","length","Search","useState","searchVal","setSearchVal","tabIndex","setTabIndex","socket","useSocket","dispatch","useDispatch","pinToastId","useRef","replyToastId","retweetToastId","deleteToastId","useSelector","state","pages","userSearch","currentPageUser","pageSizeUser","totalItemsCountUser","pagesUser","userDetails","pageNumber","getPosts","searchUsers","useEffect","timeoutId","setTimeout","clearTimeout","console","log","type","value","target","originalPostId","postedByUsername","likePost","emit","notificationFrom","notificationTo","replyPostId","history","push","backgroundGreenPostId","toast","warning","retweetPost","then","dismiss","success","formData","replyPost","reply","pinnedPost","pinPostUser"],"mappings":"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","file":"static/js/7.bd69c738.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Paginate.scss';\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nconst Paginate = ({handlePageChange, pageSize, totalItemsCount, currentPage }) => {\r\n    return (\r\n        <Pagination\r\n            itemClass=\"page-item\"\r\n            linkClass=\"page-link\"\r\n            activePage={currentPage}\r\n            itemsCountPerPage={pageSize}\r\n            totalItemsCount={totalItemsCount}\r\n            pageRangeDisplayed={10}\r\n            onChange={handlePageChange}\r\n      />\r\n    )\r\n};\r\n\r\nexport default Paginate;","import React from \"react\";\r\nimport \"./User.scss\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst User = ({\r\n  username,\r\n  profilePic,\r\n  firstName,\r\n  lastName,\r\n  loggedinFollowing,\r\n  followUser,\r\n  followLoading,\r\n  followIndex,\r\n  userIndex,\r\n  parentUserClicked\r\n}) => {\r\n  const ifFollowing = loggedinFollowing\r\n    ? loggedinFollowing.findIndex((u) => u.username === username) > -1\r\n    : null;\r\n\r\n  return (\r\n    <div\r\n      className=\"userDet\"\r\n      key={username}\r\n      onClick={parentUserClicked}\r\n    >\r\n      <div className=\"details\">\r\n        <div className=\"picAndName\">\r\n          <img src={profilePic} alt={username} />\r\n          <Link className=\"firstlastname\" to={`/profile/${username}`} onClick={e => e.stopPropagation()}>\r\n            {firstName} {lastName}\r\n          </Link>\r\n          <span className=\"username\">@{username}</span>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"followBtn\"\r\n        style={{\r\n          display:\r\n            username === localStorage.getItem(\"userName\") || (!followUser || !loggedinFollowing)\r\n              ? \"none\"\r\n              : \"flex\",\r\n        }}\r\n      >\r\n        <button\r\n          style={{\r\n            backgroundColor: ifFollowing ? \"#00ACEE\" : \"white\",\r\n            color: ifFollowing ? \"white\" : \"#00ACEE\",\r\n          }}\r\n          disabled={followLoading && followIndex === userIndex}\r\n          onClick={followUser}\r\n        >\r\n          {ifFollowing ? \"Following\" : \"Follow\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport \"./SearchTab.scss\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Post from \"../Homepage/PostsList/Post/Post\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport User from \"../Users/User/User\";\r\n\r\nconst timeDifference = (current, previous) => {\r\n  const msPerMinute = 60 * 1000;\r\n  const msPerHour = msPerMinute * 60;\r\n  const msPerDay = msPerHour * 24;\r\n  const msPerMonth = msPerDay * 30;\r\n  const msPerYear = msPerDay * 365;\r\n\r\n  const elapsed = current - previous;\r\n\r\n  if (elapsed < msPerMinute) {\r\n    if (elapsed / 1000 < 30) return \"Just Now\";\r\n    return Math.round(elapsed / 1000) + \" seconds ago\";\r\n  } else if (elapsed < msPerHour) {\r\n    return Math.round(elapsed / msPerMinute) + \" minutes ago\";\r\n  } else if (elapsed < msPerDay) {\r\n    return Math.round(elapsed / msPerHour) + \" hours ago\";\r\n  } else if (elapsed < msPerMonth) {\r\n    return Math.round(elapsed / msPerDay) + \" days ago\";\r\n  } else if (elapsed < msPerYear) {\r\n    return Math.round(elapsed / msPerMonth) + \" months ago\";\r\n  } else {\r\n    return Math.round(elapsed / msPerYear) + \" years ago\";\r\n  }\r\n};\r\n\r\nconst SearchTab = ({\r\n  selectTabIndex,\r\n  posts,\r\n  deletePost,\r\n  retweetReq,\r\n  viewSinglePostReq,\r\n  likePostReq,\r\n  postActionLoading,\r\n  retweetActionLoading,\r\n  goToProfile,\r\n  submitReplyReq,\r\n  disableReply,\r\n  pinPost,\r\n  pinnedPostId,\r\n  postLoading,\r\n  users,\r\n  userLoading\r\n}) => {\r\n  const renderPosts = posts.map((post) => {\r\n    return (\r\n      <Post\r\n        key={post._id}\r\n        postId={post._id}\r\n        firstName={post.postedBy.firstName}\r\n        lastName={post.postedBy.lastName}\r\n        username={post.postedBy.username}\r\n        content={post.content}\r\n        createdAt={timeDifference(\r\n          new Date(),\r\n          new Date(post.content ? post.createdAt : post.retweetData.createdAt)\r\n        )}\r\n        profilePic={post.postedBy.profilePic}\r\n        likePostReq={likePostReq}\r\n        likes={post.likes}\r\n        postActionLoading={postActionLoading}\r\n        loggedInUsername={localStorage.getItem(\"userName\")}\r\n        retweetReq={retweetReq}\r\n        retweetActionLoading={retweetActionLoading}\r\n        retweetUsers={post.retweetUsers}\r\n        retweetData={post.retweetData}\r\n        combineretweetsAndPosts={true}\r\n        replyTo={post.replyTo || null}\r\n        replyToUsername={\r\n          post.replyTo && post.replyTo.originalPost\r\n            ? post.replyTo.originalPost.postedBy.username\r\n            : null\r\n        }\r\n        replyPostTypeReplyToUsername={post.postedBy.username}\r\n        viewSinglePostReq={() =>\r\n          viewSinglePostReq(\r\n            post._id,\r\n            post.replyTo ? post.replyTo.originalPost._id : null\r\n          )\r\n        }\r\n        deletePost={deletePost}\r\n        goToProfile={goToProfile}\r\n        disableReply={disableReply}\r\n        pinPost={() => pinPost(post._id)}\r\n        pinnedPostId={pinnedPostId}\r\n        submitReplyReq={submitReplyReq}\r\n      />\r\n    );\r\n  });\r\n\r\n  const renderUserList = users.map((user, index) => {\r\n    return (\r\n      <User\r\n        key={user.username}\r\n        firstName={user.firstName}\r\n        lastName={user.lastName}\r\n        username={user.username}\r\n        profilePic={user.profilePic}\r\n        parentUserClicked={() => {}}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Tabs onSelect={selectTabIndex}>\r\n      <TabList>\r\n        <Tab>Posts</Tab>\r\n        <Tab>Users</Tab>\r\n      </TabList>\r\n\r\n      <TabPanel>{postLoading ? <Spinner width=\"60px\" />: (posts.length > 0 ? renderPosts: <h3 className=\"notfound\">No Posts Found.</h3>)}</TabPanel>\r\n      <TabPanel>{userLoading ? <Spinner width=\"60px\" />: (users.length > 0 ? renderUserList: <h3 className=\"notfound\">No Users Found.</h3>)}</TabPanel>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default SearchTab;\r\n","/* eslint-disable */\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./Search.scss\";\r\nimport SearchTab from \"../../components/SearchTabs/SearchTab\";\r\nimport Paginate from \"../../components/Paginate/Paginate\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  deletePost,\r\n  getPosts,\r\n  likePost,\r\n  replyPost,\r\n  retweetPost,\r\n} from \"../../store/Actions/post\";\r\nimport { pinPostUser, searchUsers } from \"../../store/Actions/user\";\r\nimport history from \"../../history\";\r\nimport { toast } from \"react-toastify\";\r\nimport useSocket from \"../../shared/socketCustomHook\";\r\n\r\nconst Search = () => {\r\n  const [searchVal, setSearchVal] = useState(\"\");\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n  const {socket} = useSocket();\r\n\r\n  const dispatch = useDispatch();\r\n  const pinToastId = useRef();\r\n  const replyToastId = useRef();\r\n  const retweetToastId = useRef();\r\n  const deleteToastId = useRef();\r\n\r\n  const {\r\n    posts,\r\n    currentPage,\r\n    pageSize,\r\n    totalItemsCount,\r\n    pages,\r\n    postActionLoading,\r\n    retweetActionLoading,\r\n    postLoading,\r\n  } = useSelector((state) => state.post);\r\n  const {\r\n    users,\r\n    currentPageUser,\r\n    pageSizeUser,\r\n    totalItemsCountUser,\r\n    pagesUser,\r\n    userLoading\r\n  } = useSelector((state) => state.userSearch);\r\n\r\n  const { userDetails } = useSelector((state) => state.user);\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    if (tabIndex === 0) {\r\n      dispatch(getPosts(pageNumber, 30, searchVal));\r\n    } else {\r\n      dispatch(searchUsers(pageNumber, 30, searchVal, ''));\r\n    }\r\n  };\r\n\r\n  const renderPaginate = () => {\r\n    return (\r\n      <div className=\"paginate\">\r\n        {tabIndex === 0 ? (\r\n          <Paginate\r\n            handlePageChange={handlePageChange}\r\n            currentPage={currentPage}\r\n            pageSize={pageSize}\r\n            pages={pages}\r\n            totalItemsCount={totalItemsCount}\r\n          />\r\n        ) : (\r\n          <Paginate\r\n            handlePageChange={handlePageChange}\r\n            currentPage={currentPageUser}\r\n            pageSize={pageSizeUser}\r\n            pages={pagesUser}\r\n            totalItemsCount={totalItemsCountUser}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const arrayToRender = tabIndex === 0 ? posts : users;\r\n\r\n    // check if this is the first render or not\r\n    if (!searchVal && arrayToRender.length <= 0) {\r\n      // search immediately if this is the first render\r\n      //   search();\r\n      if (tabIndex === 0) {\r\n        dispatch(getPosts(1, 30, searchVal));\r\n      } else {\r\n        dispatch(searchUsers(1, 30, searchVal, ''));\r\n      }\r\n    } else {\r\n      // otherwise 500 ms timeout on type search\r\n      const timeoutId = setTimeout(() => {\r\n        if (searchVal) {\r\n          if (tabIndex === 0) {\r\n            dispatch(getPosts(1, 30, searchVal));\r\n          } else {\r\n            dispatch(searchUsers(1, 30, searchVal, ''))\r\n          }\r\n        }\r\n      }, 500);\r\n\r\n      // will run only with the second render (its objective is to clear the previous values from the first render if any)\r\n      return () => {\r\n        clearTimeout(timeoutId);\r\n      };\r\n    }\r\n  }, [searchVal, tabIndex, dispatch]);\r\n\r\n  const selectTabIndex = (index) => {\r\n    setTabIndex(index);\r\n  };\r\n\r\n  const likePostReq = (postId, originalPostId, postedByUsername) => {\r\n    dispatch(likePost(postId, originalPostId));\r\n    if (postedByUsername !== userDetails.username) {\r\n      socket.current.emit('notification Sent', {\r\n        notificationFrom: userDetails.username,\r\n        notificationTo: [postedByUsername],\r\n        type: 'like',\r\n        postId: postId\r\n      });\r\n    }\r\n  };\r\n\r\n  const goToProfile = (username) => {\r\n    history.push(`/profile/${username}`);\r\n  };\r\n\r\n  const retweetReq = (postId, originalPostId, postedByUsername) => {\r\n    retweetToastId.current = toast.warning(\"Submitting Your retweet...\");\r\n    dispatch(retweetPost(postId, originalPostId)).then(() => {\r\n      toast.dismiss(retweetToastId.current);\r\n      toast.success(\"Retweet Success\");\r\n      if (postedByUsername !== userDetails.username) {\r\n        socket.current.emit('notification Sent', {\r\n          notificationFrom: userDetails.username,\r\n          notificationTo: [postedByUsername],\r\n          type: 'retweet',\r\n          postId: postId\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const submitReplyReq = (formData, postId, postedByUsername) => {\r\n    replyToastId.current = toast.warning(\"Submitting Your Reply...\");\r\n    dispatch(replyPost(formData.reply, postId)).then(() => {\r\n      toast.dismiss(replyToastId.current);\r\n      toast.success(\"Reply Post Success\");\r\n      socket.current.emit('notification Sent', {\r\n        notificationFrom: userDetails.username,\r\n        notificationTo: [postedByUsername],\r\n        type: 'reply',\r\n        postId: postId\r\n      });\r\n    });\r\n  };\r\n\r\n  const viewSinglePostReq = (postId, replyPostId) => {\r\n    history.push(`/post/${replyPostId || postId}`, {\r\n      postId: replyPostId || postId,\r\n      backgroundGreenPostId: postId,\r\n    });\r\n  };\r\n\r\n  const deletePostReq = (postId, originalPostId) => {\r\n    deleteToastId.current = toast.warning(\"Delete post in progress\");\r\n    dispatch(deletePost(postId, originalPostId)).then(() => {\r\n      toast.dismiss(deleteToastId.current);\r\n      toast.success(\"Delete Post Success\");\r\n    });\r\n  };\r\n\r\n  const pinPost = (postId) => {\r\n    pinToastId.current = toast.warning(\"Pinning Post...\");\r\n    dispatch(pinPostUser(postId)).then(() => {\r\n      toast.dismiss(pinToastId.current);\r\n      toast.success(\"Pin Post Success\");\r\n    });\r\n  };\r\n\r\n  console.log(\"SEARCH RENDERED\");\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <h2>Search</h2>\r\n      <div className=\"input\">\r\n        <i className=\"fa fa-search\"></i>\r\n        <input\r\n          type=\"text\"\r\n          value={searchVal}\r\n          onChange={(e) => setSearchVal(e.target.value)}\r\n        />\r\n      </div>\r\n      {\r\n        userLoading || postLoading || (tabIndex === 0 && pages <= 1) || (tabIndex === 1 && pagesUser <= 1) ? null: renderPaginate()\r\n      }\r\n      <div className=\"tab\">\r\n        <SearchTab\r\n          likePostReq={likePostReq}\r\n          viewSinglePostReq={viewSinglePostReq}\r\n          retweetReq={retweetReq}\r\n          deletePost={deletePostReq}\r\n          postLoading={postLoading}\r\n          postActionLoading={postActionLoading}\r\n          retweetActionLoading={retweetActionLoading}\r\n          selectTabIndex={selectTabIndex}\r\n          goToProfile={goToProfile}\r\n          disableReply={tabIndex === 1}\r\n          submitReplyReq={submitReplyReq}\r\n          pinnedPostId={\r\n            userDetails && userDetails.pinnedPost\r\n              ? userDetails.pinnedPost._id\r\n              : null\r\n          }\r\n          pinPost={pinPost}\r\n          posts={posts}\r\n          users={users}\r\n          userLoading={userLoading}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"sourceRoot":""}
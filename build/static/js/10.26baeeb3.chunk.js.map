{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","store/Actions/user.js","store/Actions/chat.js","components/Users/User/User.js","pages/NewMessage/NewMessage.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","signup","formData","dispatch","getState","a","axios","post","history","type","USER_ERROR","errorMessage","response","data","message","login","AUTH_LOADING","localStorage","setItem","accessToken","userDetails","email","username","firstName","lastName","profilePic","LOGIN","token","pinPostUser","postId","put","headers","Authorization","user","getItem","console","log","PIN_POST","pinnedPost","pintype","searchUsers","currentPage","pageSize","search","filterUsernames","USERS_LOADING","get","FETCH_USERS","currentPageUser","pageSizeUser","pagesUser","pages","totalItemsCountUser","totalItemsCount","getChatMsgs","chatId","CHAT_LOADING","FETCH_CHAT_MESSAGES","chat","messages","messagesCount","CHAT_MESSAGES_ERROR","error","createChat","users","isGroupChat","CREATE_CHAT","result","changeChatName","chatName","CHANGE_CHAT_NAME","sendMessage","content","newDate","Date","toISOString","SEND_MESSAGE","_id","createdAt","updatedAt","sender","coverPhoto","readBy","UPDATE_LATEST_MESSAGE","SEND_MESSAGE_ERROR","msgId","User","loggedinFollowing","followUser","followLoading","followIndex","userIndex","parentUserClicked","ifFollowing","findIndex","u","className","onClick","src","alt","to","e","stopPropagation","style","display","backgroundColor","color","disabled","NewMessage","useState","inputVal","setInputVal","selectedUsers","setSelectersUsers","inputRef","useRef","useDispatch","useSelector","state","userSearch","chatLoading","removeLastSelectedUsers","key","current","filter","useEffect","document","addEventListener","timeoutId","setTimeout","usernamesSelected","map","n","join","clearTimeout","removeEventListener","CLEAR_USER_SEARCH","renderUserList","index","selUser","autoComplete","name","placeholder","ref","onFocus","onChange","target","width","mappedUsernames","then"],"mappings":"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","file":"static/js/10.26baeeb3.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from '../../axios';\r\nimport { AUTH_LOADING, FETCH_USERS, LOGIN, PIN_POST, USERS_LOADING, USER_ERROR } from './actionTypes';\r\nimport history from '../../history';\r\n\r\nexport const signup = formData => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            await axios.post('/auth/signup', formData);\r\n            history.push('/login');\r\n        } catch(err) {\r\n            dispatch({\r\n                type: USER_ERROR,\r\n                errorMessage: err.response && err.response.data && err.response.data.message ? err.response.data.message: err.message\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const login = formData => {\r\n    return async (dispatch, getState) => {\r\n        dispatch({\r\n            type: AUTH_LOADING\r\n        });\r\n        try {\r\n            const response = await axios.post('/auth/login', formData);\r\n            localStorage.setItem('accessToken', response.data.accessToken);\r\n            localStorage.setItem('email', response.data.userDetails.email);\r\n            localStorage.setItem('userName', response.data.userDetails.username);\r\n            localStorage.setItem('firstName', response.data.userDetails.firstName);\r\n            localStorage.setItem('lastName', response.data.userDetails.lastName);\r\n            localStorage.setItem('profilePic', response.data.userDetails.profilePic);\r\n            history.push('/');\r\n            dispatch({\r\n                type: LOGIN,\r\n                token: response.data.accessToken,\r\n                userDetails: response.data.userDetails\r\n            });\r\n        } catch(err) {\r\n            dispatch({\r\n                type: USER_ERROR,\r\n                errorMessage: err.response && err.response.data && err.response.data.message ? err.response.data.message: err.message\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport const pinPostUser = postId => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const response = await axios.put('/user/pinPost', {postId}, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + (getState().user.token || localStorage.getItem('accessToken'))\r\n                }\r\n            });\r\n            console.log(response.data);\r\n            dispatch({\r\n                type: PIN_POST,\r\n                pinnedPost: response.data.pinnedPost,\r\n                pintype: response.data.type\r\n            });\r\n        } catch(err) {\r\n            dispatch({\r\n                type: USER_ERROR,\r\n                errorMessage: err.response && err.response.data && err.response.data.message ? err.response.data.message: err.message\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport const searchUsers = (currentPage, pageSize, search, filterUsernames) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({\r\n                type: USERS_LOADING\r\n            });\r\n            const response = await axios.get(`/user/search?currentPage=${currentPage}&pageSize=${pageSize}&search=${search}&filterUsernames=${filterUsernames}`, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + (getState().user.token || localStorage.getItem('accessToken'))\r\n                }\r\n            });\r\n            console.log('SEARCH USERS RESULT', response.data);\r\n            dispatch({\r\n                type: FETCH_USERS,\r\n                userDetails: response.data.userDetails,\r\n                currentPageUser: response.data.currentPage,\r\n                pageSizeUser: response.data.pageSize,\r\n                pagesUser: response.data.pages,\r\n                totalItemsCountUser: response.data.totalItemsCount,\r\n            });\r\n        } catch(err) {\r\n            dispatch({\r\n                type: USER_ERROR,\r\n                errorMessage: err.response && err.response.data && err.response.data.message ? err.response.data.message: err.message\r\n            });\r\n        }\r\n    };\r\n};","import axios from \"../../axios\";\r\nimport socketIOClient from 'socket.io-client';\r\nimport {\r\n  CHANGE_CHAT_NAME,\r\n  CHAT_LOADING,\r\n  CHAT_MESSAGES_ERROR,\r\n  CREATE_CHAT,\r\n  FETCH_CHAT_MESSAGES,\r\n  SEND_MESSAGE,\r\n  SEND_MESSAGE_ERROR,\r\n  UPDATE_LATEST_MESSAGE,\r\n} from \"./actionTypes\";\r\n\r\nexport const getChatMsgs = (chatId, currentPage, pageSize) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      if (currentPage === 1) {\r\n        dispatch({ type: CHAT_LOADING });\r\n      }\r\n      const token =\r\n        getState().user && getState().user.token\r\n          ? getState().user.token\r\n          : localStorage.getItem(\"accessToken\");\r\n      const { data } = await axios.get(`/chat/getMessages?chatId=${chatId}&currentPage=${currentPage}&pageSize=${pageSize}`, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      });\r\n      // console.log(data);\r\n      dispatch({\r\n        type: FETCH_CHAT_MESSAGES,\r\n        chat: data.chat,\r\n        messages: data.messages,\r\n        currentPage: data.currentPage,\r\n        pages: data.pages,\r\n        messagesCount: data.messagesCount,\r\n        pageSize: data.pageSize\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: CHAT_MESSAGES_ERROR,\r\n        error:\r\n          err.response && err.response.data && err.response.data.message\r\n            ? err.response.data.message\r\n            : err.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createChat = (users, isGroupChat) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: CHAT_LOADING });\r\n      const { data } = await axios.post(\r\n        `/chat/createChat?isGroupChat=${isGroupChat}`,\r\n        { users },\r\n        {\r\n          headers: {\r\n            Authorization:\r\n              \"Bearer \" +\r\n              (getState().user.token || localStorage.getItem(\"accessToken\")),\r\n          },\r\n        }\r\n      );\r\n      const result = await dispatch({\r\n        type: CREATE_CHAT,\r\n        chat: data,\r\n      });\r\n      return result;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const changeChatName = (chatId, chatName) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      await axios.put(\r\n        `/chat/changeChatName?chatId=${chatId}`,\r\n        { chatName },\r\n        {\r\n          headers: {\r\n            Authorization:\r\n              \"Bearer \" +\r\n              (getState().user.token || localStorage.getItem(\"accessToken\")),\r\n          },\r\n        }\r\n      );\r\n      dispatch({\r\n        type: CHANGE_CHAT_NAME,\r\n        chatName: chatName,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const sendMessage = (chatId, content) => {\r\n  return async (dispatch, getState) => {\r\n    const newDate = new Date().toISOString();\r\n    dispatch({\r\n      type: SEND_MESSAGE,\r\n      message: {\r\n        content: content,\r\n        _id: newDate,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n        sender: {\r\n          coverPhoto: getState().user.userDetails.coverPhoto,\r\n          firstName: getState().user.userDetails.firstName,\r\n          lastName: getState().user.userDetails.lastName,\r\n          profilePic: getState().user.userDetails.profilePic,\r\n          username: getState().user.userDetails.username,\r\n        },\r\n        readBy: [],\r\n        chat: chatId,\r\n        error: false\r\n      },\r\n    });\r\n    try {\r\n      await axios.post(\r\n        `/chat/sendMessage?chatId=${chatId}`,\r\n        { content },\r\n        {\r\n          headers: {\r\n            Authorization:\r\n              \"Bearer \" +\r\n              (getState().user.token || localStorage.getItem(\"accessToken\")),\r\n          },\r\n        }\r\n      );\r\n      dispatch({\r\n          type: UPDATE_LATEST_MESSAGE,\r\n          content: content,\r\n          user: {\r\n            coverPhoto: getState().user.userDetails.coverPhoto,\r\n            firstName: getState().user.userDetails.firstName,\r\n            lastName: getState().user.userDetails.lastName,\r\n            profilePic: getState().user.userDetails.profilePic,\r\n            username: getState().user.userDetails.username,\r\n          },\r\n          chatId: chatId\r\n      });\r\n    } catch (err) {\r\n        console.log(err);\r\n      dispatch({\r\n        type: SEND_MESSAGE_ERROR,\r\n        msgId: newDate,\r\n      });\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport \"./User.scss\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst User = ({\r\n  username,\r\n  profilePic,\r\n  firstName,\r\n  lastName,\r\n  loggedinFollowing,\r\n  followUser,\r\n  followLoading,\r\n  followIndex,\r\n  userIndex,\r\n  parentUserClicked\r\n}) => {\r\n  const ifFollowing = loggedinFollowing\r\n    ? loggedinFollowing.findIndex((u) => u.username === username) > -1\r\n    : null;\r\n\r\n  return (\r\n    <div\r\n      className=\"userDet\"\r\n      key={username}\r\n      onClick={parentUserClicked}\r\n    >\r\n      <div className=\"details\">\r\n        <div className=\"picAndName\">\r\n          <img src={profilePic} alt={username} />\r\n          <Link className=\"firstlastname\" to={`/profile/${username}`} onClick={e => e.stopPropagation()}>\r\n            {firstName} {lastName}\r\n          </Link>\r\n          <span className=\"username\">@{username}</span>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"followBtn\"\r\n        style={{\r\n          display:\r\n            username === localStorage.getItem(\"userName\") || (!followUser || !loggedinFollowing)\r\n              ? \"none\"\r\n              : \"flex\",\r\n        }}\r\n      >\r\n        <button\r\n          style={{\r\n            backgroundColor: ifFollowing ? \"#00ACEE\" : \"white\",\r\n            color: ifFollowing ? \"white\" : \"#00ACEE\",\r\n          }}\r\n          disabled={followLoading && followIndex === userIndex}\r\n          onClick={followUser}\r\n        >\r\n          {ifFollowing ? \"Following\" : \"Follow\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","/* eslint-disable */\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CLEAR_USER_SEARCH } from \"../../store/Actions/actionTypes\";\r\nimport { searchUsers } from \"../../store/Actions/user\";\r\nimport User from \"../../components/Users/User/User\";\r\nimport history from \"../../history\";\r\nimport \"./NewMessage.scss\";\r\nimport { createChat } from \"../../store/Actions/chat\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\n\r\nconst NewMessage = () => {\r\n  const [inputVal, setInputVal] = useState(\"\");\r\n  const [selectedUsers, setSelectersUsers] = useState([]);\r\n  const inputRef = useRef();\r\n  const dispatch = useDispatch();\r\n  const { users } = useSelector((state) => state.userSearch);\r\n  const { chatLoading } = useSelector((state) => state.chat);\r\n\r\n  const parentUserClicked = (user) => {\r\n    setSelectersUsers((users) => [...users, user]);\r\n    dispatch({ type: CLEAR_USER_SEARCH });\r\n    setInputVal(\"\");\r\n  };\r\n\r\n  const removeLastSelectedUsers = (e) => {\r\n    if (e.key == \"Backspace\" && !inputRef.current.value) {\r\n      console.log(selectedUsers);\r\n      setSelectersUsers((users) =>\r\n        users.filter((user, i) => i !== users.length - 1)\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", removeLastSelectedUsers);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!inputVal) {\r\n      dispatch({ type: CLEAR_USER_SEARCH });\r\n      return;\r\n    }\r\n\r\n    const timeoutId = setTimeout(() => {\r\n      const mappedUsernames = selectedUsers.map((n) => n.username);\r\n      const usernamesSelected = mappedUsernames.join(\",\");\r\n      dispatch(searchUsers(0, 1000, inputVal, usernamesSelected));\r\n    }, 400);\r\n\r\n    return () => {\r\n      clearTimeout(timeoutId);\r\n      document.removeEventListener(\"keydown\", removeLastSelectedUsers);\r\n    };\r\n  }, [inputVal, dispatch, selectedUsers]);\r\n\r\n  const renderUserList = users.map((user, index) => {\r\n    return (\r\n      <User\r\n        key={user.username}\r\n        firstName={user.firstName}\r\n        lastName={user.lastName}\r\n        username={user.username}\r\n        profilePic={user.profilePic}\r\n        parentUserClicked={() => parentUserClicked(user)}\r\n      />\r\n    );\r\n  });\r\n\r\n  const createChatReq = () => {\r\n    const mappedUsernames = selectedUsers.map((n) => n.username);\r\n    dispatch(createChat(mappedUsernames, true)).then(() => {\r\n      history.push(\"/messages\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"newmessage\">\r\n        <div className=\"h2\">\r\n          <h2>New Message</h2>\r\n        </div>\r\n        <div className=\"personsinput\">\r\n          <span>To: </span>\r\n          <div className=\"users-input\">\r\n            <div className=\"users\">\r\n              {selectedUsers.map((selUser) => {\r\n                return (\r\n                  <span key={selUser.username}>\r\n                    {selUser.firstName} {selUser.lastName}\r\n                  </span>\r\n                );\r\n              })}\r\n            </div>\r\n            <div className=\"input\">\r\n              <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                name=\"person\"\r\n                placeholder=\"Type the name of the person/s\"\r\n                value={inputVal}\r\n                ref={inputRef}\r\n                onFocus={() => dispatch(searchUsers(0, 1000, '', selectedUsers.map((n) => n.username)))}\r\n                onChange={(e) => setInputVal(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {users && users.length > 0 && (\r\n          <div className=\"usersTable\">{renderUserList}</div>\r\n        )}\r\n      </div>\r\n      <div className=\"createChatBtn\">\r\n        {chatLoading ? (\r\n          <Spinner width=\"30px\" />\r\n        ) : (\r\n          <button onClick={createChatReq} disabled={selectedUsers.length <= 0}>\r\n            Create Chat\r\n          </button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewMessage;\r\n"],"sourceRoot":""}
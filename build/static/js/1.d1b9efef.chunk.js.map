{"version":3,"sources":["store/Actions/user.js","store/Actions/post.js","components/Homepage/PostsList/Post/ReplyModal/ReplyModal.js","components/Homepage/PostsList/Post/DeleteModal/DeleteModal.js","components/Homepage/PostsList/Post/Post.js"],"names":["signup","formData","dispatch","getState","a","axios","post","history","push","type","USER_ERROR","errorMessage","response","data","message","login","AUTH_LOADING","localStorage","setItem","accessToken","userDetails","email","username","firstName","lastName","profilePic","LOGIN","token","pinPostUser","postId","put","headers","Authorization","user","getItem","console","log","PIN_POST","pinnedPost","pintype","searchUsers","currentPage","pageSize","search","filterUsernames","USERS_LOADING","get","FETCH_USERS","currentPageUser","pageSizeUser","pagesUser","pages","totalItemsCountUser","totalItemsCount","createPost","CREATE_POST","POST_ERROR","getPosts","POST_LOADING","FETCH_POSTS","posts","postData","likePost","originalPostId","LIKE_POST","like","retweetPost","RETWEET_LOADING","RETWEET_POST","newlyAddedPost","retweet","_id","postedBy","UNRETWEET_POST","deletedPostId","replyPost","replyText","REPLY_TO_POST","p","toast","error","deletePost","DELETE_POST","delete","response2","ReplyModal","content","createdAt","closeModel","retweetedFirstName","retweetedLastName","submitReplyReq","useForm","register","handleSubmit","errors","className","onClick","src","alt","name","placeholder","ref","required","disabled","DeleteModal","closeDeleteModel","modalType","pinPostReq","Post","likePostReq","likes","postActionLoading","loggedInUsername","retweetReq","retweetActionLoading","retweetUsers","retweetData","viewSinglePostReq","disableBorderBottom","replyPostTypeReplyToUsername","postIdHasGreenBackground","replyTo","goToProfile","disableReply","pinPost","pinnedPostId","useState","replymodalOpen","setreplymodalOpen","open","deletemodalOpen","setdeletemodalOpen","openDeleteModal","e","stopPropagation","style","borderBottom","backgroundColor","color","display","originalPost","postLoading","findIndex","x","length"],"mappings":"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","file":"static/js/1.d1b9efef.chunk.js","sourcesContent":["import axios from '../../axios';\r\nimport { AUTH_LOADING, FETCH_USERS, LOGIN, PIN_POST, USERS_LOADING, USER_ERROR } from './actionTypes';\r\nimport history from '../../history';\r\n\r\nexport const signup = formData => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            await axios.post('/auth/signup', formData);\r\n            history.push('/login');\r\n        } catch(err) {\r\n            dispatch({\r\n                type: USER_ERROR,\r\n                errorMessage: err.response && err.response.data && err.response.data.message ? err.response.data.message: err.message\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const login = formData => {\r\n    return async (dispatch, getState) => {\r\n        dispatch({\r\n            type: AUTH_LOADING\r\n        });\r\n        try {\r\n            const response = await axios.post('/auth/login', formData);\r\n            localStorage.setItem('accessToken', response.data.accessToken);\r\n            localStorage.setItem('email', response.data.userDetails.email);\r\n            localStorage.setItem('userName', response.data.userDetails.username);\r\n            localStorage.setItem('firstName', response.data.userDetails.firstName);\r\n            localStorage.setItem('lastName', response.data.userDetails.lastName);\r\n            localStorage.setItem('profilePic', response.data.userDetails.profilePic);\r\n            history.push('/');\r\n            dispatch({\r\n                type: LOGIN,\r\n                token: response.data.accessToken,\r\n                userDetails: response.data.userDetails\r\n            });\r\n        } catch(err) {\r\n            dispatch({\r\n                type: USER_ERROR,\r\n                errorMessage: err.response && err.response.data && err.response.data.message ? err.response.data.message: err.message\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport const pinPostUser = postId => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const response = await axios.put('/user/pinPost', {postId}, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + (getState().user.token || localStorage.getItem('accessToken'))\r\n                }\r\n            });\r\n            console.log(response.data);\r\n            dispatch({\r\n                type: PIN_POST,\r\n                pinnedPost: response.data.pinnedPost,\r\n                pintype: response.data.type\r\n            });\r\n        } catch(err) {\r\n            dispatch({\r\n                type: USER_ERROR,\r\n                errorMessage: err.response && err.response.data && err.response.data.message ? err.response.data.message: err.message\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport const searchUsers = (currentPage, pageSize, search, filterUsernames) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({\r\n                type: USERS_LOADING\r\n            });\r\n            const response = await axios.get(`/user/search?currentPage=${currentPage}&pageSize=${pageSize}&search=${search}&filterUsernames=${filterUsernames}`, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + (getState().user.token || localStorage.getItem('accessToken'))\r\n                }\r\n            });\r\n            console.log('SEARCH USERS RESULT', response.data);\r\n            dispatch({\r\n                type: FETCH_USERS,\r\n                userDetails: response.data.userDetails,\r\n                currentPageUser: response.data.currentPage,\r\n                pageSizeUser: response.data.pageSize,\r\n                pagesUser: response.data.pages,\r\n                totalItemsCountUser: response.data.totalItemsCount,\r\n            });\r\n        } catch(err) {\r\n            dispatch({\r\n                type: USER_ERROR,\r\n                errorMessage: err.response && err.response.data && err.response.data.message ? err.response.data.message: err.message\r\n            });\r\n        }\r\n    };\r\n};","import { toast } from \"react-toastify\";\r\nimport axios from \"../../axios\";\r\n// import history from '../../history';\r\nimport {\r\n  CREATE_POST,\r\n  DELETE_POST,\r\n  FETCH_POSTS,\r\n  LIKE_POST,\r\n  POST_ERROR,\r\n  POST_LOADING,\r\n  REPLY_TO_POST,\r\n  RETWEET_LOADING,\r\n  RETWEET_POST,\r\n  UNRETWEET_POST,\r\n} from \"./actionTypes\";\r\n\r\nexport const createPost = (formData) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const response = await axios.post(\"/post/create\", formData, {\r\n        headers: {\r\n          Authorization:\r\n            \"Bearer \" + getState().user.token ||\r\n            localStorage.getItem(\"accessToken\"),\r\n        },\r\n      });\r\n      dispatch({\r\n        type: CREATE_POST,\r\n        post: response.data.post,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        errorMessage:\r\n          err.response && err.response.data && err.response.data.message\r\n            ? err.response.data.message\r\n            : err.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getPosts = (currentPage, pageSize, search) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: POST_LOADING\r\n      });\r\n      const response = await axios.get(`/post?currentPage=${currentPage}&pageSize=${pageSize}&search=${search}`, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\"),\r\n        },\r\n      });\r\n      console.log(response.data);\r\n      dispatch({\r\n        type: FETCH_POSTS,\r\n        posts: response.data.postData,\r\n        currentPage: response.data.currentPage,\r\n        pageSize: response.data.pageSize,\r\n        pages: response.data.pages,\r\n        totalItemsCount: response.data.totalItemsCount\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        errorMessage:\r\n          err.response && err.response.data && err.response.data.message\r\n            ? err.response.data.message\r\n            : err.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const likePost = (postId, originalPostId) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: LIKE_POST,\r\n        postId: postId,\r\n        originalPostId: originalPostId,\r\n        like: {\r\n          firstName: getState().user.userDetails.firstName,\r\n          lastName: getState().user.userDetails.lastName,\r\n          username: localStorage.getItem('userName'),\r\n          profilePic: getState().user.userDetails.profilePic,\r\n        },\r\n      });\r\n      await axios.put(\r\n        `/post/like/${postId}`,\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + getState().user.token,\r\n          },\r\n        }\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        errorMessage:\r\n          err.response && err.response.data && err.response.data.message\r\n            ? err.response.data.message\r\n            : err.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const retweetPost = (postId, originalPostId) => {\r\n  return async (dispatch, getState) => {\r\n    const accessToken = getState().user.token;\r\n    try {\r\n      dispatch({\r\n        type: RETWEET_LOADING,\r\n        postId: postId,\r\n      });\r\n      const response = await axios.put(\r\n        `/post/retweet?postId=${postId}&originalPostId=${originalPostId}`,\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + accessToken,\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      if (response.data.message === \"success\" && response.data.type === \"add\") {\r\n        dispatch({\r\n          type: RETWEET_POST,\r\n          newlyAddedPost: response.data.newlyAddedPost,\r\n          retweet: response.data.newlyAddedPost._id,\r\n          postId: response.data.originalPostId,\r\n          postedBy: response.data.newlyAddedPost.postedBy,\r\n        });\r\n      } else if (\r\n        response.data.message === \"success\" &&\r\n        response.data.type === \"delete\"\r\n      ) {\r\n        dispatch({\r\n          type: UNRETWEET_POST,\r\n          deletedPostId: response.data.deletedPostId,\r\n          originalPostId: response.data.originalPostId,\r\n          username: getState().user.userDetails.username,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        errorMessage:\r\n          err.response && err.response.data && err.response.data.message\r\n            ? err.response.data.message\r\n            : err.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const replyPost = (replyText, postId) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `/post/reply`,\r\n        {\r\n          replyText: replyText,\r\n          postId: postId,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + getState().user.token,\r\n          },\r\n        }\r\n      );\r\n      const p = await dispatch({\r\n        type: REPLY_TO_POST,\r\n        post: response.data,\r\n        originalPostId: postId,\r\n      });\r\n      return p;\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        errorMessage:\r\n          err.response && err.response.data && err.response.data.message\r\n            ? err.response.data.message\r\n            : err.message,\r\n      });\r\n      toast.error(err.response && err.response.data && err.response.data.message\r\n        ? err.response.data.message\r\n        : err.message);\r\n    }\r\n  };\r\n};\r\n\r\nexport const deletePost = (postId, originalPostId) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      postId: postId,\r\n      originalPostId: originalPostId,\r\n    });\r\n    const response = await axios.delete(`/post/${postId}`, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + getState().user.token,\r\n      },\r\n    });\r\n\r\n    if (response.data.message === 'success') {\r\n      const response2 = await axios.get(\"/post\", {\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\"),\r\n        },\r\n      });\r\n      console.log(response2.data);\r\n      dispatch({\r\n        type: POST_LOADING\r\n      });\r\n      dispatch({\r\n        type: FETCH_POSTS,\r\n        posts: response2.data.postData,\r\n      });\r\n    }\r\n\r\n\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"./ReplyModal.scss\";\r\n\r\nconst ReplyModal = ({\r\n  profilePic,\r\n  content,\r\n  firstName,\r\n  lastName,\r\n  username,\r\n  createdAt,\r\n  closeModel,\r\n  retweetedFirstName,\r\n  retweetedLastName,\r\n  postId,\r\n  submitReplyReq\r\n}) => {\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const submitReply = (formData) => {\r\n    submitReplyReq(formData, postId);\r\n    closeModel();\r\n  };\r\n\r\n  return (\r\n    <div className=\"backdrop\">\r\n      <div className=\"replyModal\">\r\n        <div className=\"titleP\">\r\n          <h2>Reply</h2>\r\n          <i className=\"fa fa-times\" onClick={closeModel}></i>\r\n        </div>\r\n        <div className=\"row postDetails\">\r\n          {retweetedFirstName ? (\r\n            <span className=\"reposted\">\r\n              Retweeted By {retweetedFirstName} {retweetedLastName}\r\n            </span>\r\n          ) : null}\r\n          <div className=\"profPic col-md-2\">\r\n            <img src={profilePic} alt={\"gdfgfdg\"} />\r\n          </div>\r\n          <div className=\"postDetails col-md-10\">\r\n            <div className=\"namesdate\">\r\n              <span className=\"firstLastName\">\r\n                {firstName} {lastName}\r\n              </span>\r\n              <span className=\"username\">@{username}</span>\r\n              <p className=\"date\">{createdAt}</p>\r\n              <div className=\"pinnedClose\">\r\n                <i className=\"fa fa-thumbtack\"></i>\r\n                <i className=\"fa fa-times\"></i>\r\n              </div>\r\n            </div>\r\n            <p className=\"postContent\">{content}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"postflex\">\r\n          <div className=\"profilePic\">\r\n            <img\r\n              src={localStorage.getItem(\"profilePic\")}\r\n              alt=\"profile pic\"\r\n            />\r\n          </div>\r\n          <form>\r\n            <textarea\r\n              name=\"reply\"\r\n              placeholder=\"Type Your Reply\"\r\n              ref={register({ required: true })}\r\n            ></textarea>\r\n          </form>\r\n        </div>\r\n        <div className=\"btnActions\">\r\n          <button\r\n            onClick={handleSubmit(submitReply)}\r\n            disabled={!!errors[\"reply\"]}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Reply\r\n          </button>\r\n          <button onClick={closeModel} className=\"btn btn-danger\">\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReplyModal;\r\n","import React from \"react\";\r\nimport \"./DeleteModal.scss\";\r\n\r\nconst DeleteModal = ({closeDeleteModel, deletePost, modalType, pinPostReq}) => {\r\n\r\n  return (\r\n    <div className=\"backdrop\">\r\n      <div className=\"deleteModal\">\r\n        <div className=\"titleP\">\r\n          <h2>{modalType === 'delete' ? 'Delete The Post?': 'Pin this post On Your Profile?'}</h2>\r\n          <i className=\"fa fa-times\" onClick={closeDeleteModel}></i>\r\n        </div>\r\n        <div className=\"makesureDelete\">\r\n            <p>{modalType === 'delete' ? \"You won't be able to undo this.\": \"This post will appear on the top of your profile. You can only pin one post\"}</p>\r\n        </div>\r\n        <div className=\"btnActions\">\r\n          <button\r\n            onClick={modalType === 'delete' ? deletePost: pinPostReq}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            {modalType === 'delete' ? 'Delete': 'Pin'}\r\n          </button>\r\n          <button onClick={closeDeleteModel} className=\"btn btn-danger\">\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteModal;\r\n","import React, { useState } from \"react\";\r\nimport ReplyModal from \"./ReplyModal/ReplyModal\";\r\nimport \"./Post.scss\";\r\nimport DeleteModal from \"./DeleteModal/DeleteModal\";\r\n\r\nconst Post = ({\r\n  postId,\r\n  firstName,\r\n  lastName,\r\n  username,\r\n  profilePic,\r\n  content,\r\n  createdAt,\r\n  likePostReq,\r\n  likes,\r\n  postActionLoading,\r\n  loggedInUsername,\r\n  retweetReq,\r\n  retweetActionLoading,\r\n  retweetUsers,\r\n  retweetData,\r\n  submitReplyReq,\r\n  viewSinglePostReq,\r\n  type,\r\n  replyPostTypeReplyToUsername,\r\n  disableBorderBottom,\r\n  postIdHasGreenBackground,\r\n  deletePost,\r\n  replyTo,\r\n  goToProfile,\r\n  disableReply,\r\n  pinPost,\r\n  pinnedPost,\r\n  pinnedPostId\r\n}) => {\r\n  const likePost = (e) => {\r\n    e.stopPropagation();\r\n    likePostReq(postId, replyTo ? replyTo.originalPost._id: null);\r\n  };\r\n\r\n  const retweet = (e) => {\r\n    retweetReq(postId, retweetData ? retweetData._id: null);\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const [replymodalOpen, setreplymodalOpen] = useState(false);\r\n  const [deletemodalOpen, setdeletemodalOpen] = useState({open: false, type: 'delete'});\r\n\r\n  const closeModel = () => {\r\n    setreplymodalOpen(false);\r\n  };\r\n\r\n  const openReplyModal = (e) => {\r\n    e.stopPropagation();\r\n    setreplymodalOpen(true);\r\n  };\r\n\r\n  const goToProfileReq = e => {\r\n    e.stopPropagation();\r\n    goToProfile(replyTo.originalPost.postedBy.username);\r\n  };\r\n\r\n  const openDeleteModal = (e, modalType) => {\r\n    e.stopPropagation();\r\n    setdeletemodalOpen({\r\n      open: true,\r\n      type: modalType\r\n    });\r\n  };\r\n\r\n  const closeDeleteModel = () => {\r\n    setdeletemodalOpen({\r\n      open: false,\r\n      type: 'delete'\r\n    });\r\n  };\r\n\r\n  const deletePostReq = () => {\r\n    deletePost(postId, replyTo ? replyTo.originalPost.postedBy.username: null);\r\n    closeDeleteModel();\r\n  };\r\n  \r\n  const pinPostReq = () => {\r\n    pinPost(postId);\r\n    closeDeleteModel();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"postParent\"\r\n        onClick={viewSinglePostReq}\r\n        style={{\r\n          borderBottom: disableBorderBottom ? \"none\" : \"1px solid #dddada\",\r\n          backgroundColor: postIdHasGreenBackground && postIdHasGreenBackground === postId ? 'rgba(1, 152, 117, .17)': \"white\"\r\n        }}\r\n      >\r\n        {!content ? (\r\n          <span className=\"reposted\">\r\n            Retweeted By {firstName} {lastName}\r\n          </span>\r\n        ) : null}\r\n        {\r\n          pinnedPost && (\r\n            <div className=\"pinned\">\r\n              <i className=\"fa fa-thumbtack\"></i>\r\n              <span>Pinned Post</span>\r\n            </div>\r\n          )\r\n        }\r\n        <div className=\"row\">\r\n          <div className=\"profPic col-md-2\">\r\n            <img\r\n              src={content ? profilePic : retweetData.postedBy.profilePic}\r\n              alt={content ? firstName : retweetData.postedBy.profilePic}\r\n            />\r\n          </div>\r\n          <div className=\"postDetails col-md-10\">\r\n            <div className=\"namesdate\">\r\n              <span className=\"firstLastName\" onClick={(e) => {\r\n                e.stopPropagation();\r\n                goToProfile(content ? username : retweetData.postedBy.username)\r\n              }}>\r\n                {content ? firstName : retweetData.postedBy.firstName}{\" \"}\r\n                {content ? lastName : retweetData.postedBy.lastName}\r\n              </span>\r\n              <span className=\"username\">\r\n                @{content ? username : retweetData.postedBy.username}\r\n              </span>\r\n              <p className=\"date\">{createdAt}</p>\r\n              <div className=\"pinnedClose\">\r\n                <i style={{\r\n                  color: pinnedPostId && pinnedPostId === postId ? 'red': 'grey'\r\n                }} onClick={(e) => openDeleteModal(e, 'pin')} className=\"fa fa-thumbtack\"></i>\r\n                <i onClick={(e) => openDeleteModal(e, 'delete')} style={{\r\n                  display: username === loggedInUsername && !pinnedPost ? 'inline': 'none'\r\n                }} className=\"fa fa-times\"></i>\r\n              </div>\r\n            </div>\r\n            {(replyTo && replyTo.originalPost) && (\r\n              <p className=\"replyTo\">\r\n                Replying To{\" \"}\r\n                <span onClick={goToProfileReq}>\r\n                  @{replyTo.originalPost.postedBy.username}\r\n                </span>\r\n              </p>\r\n            )}\r\n            <p className=\"postContent\">\r\n              {content ? content : retweetData.content}\r\n            </p>\r\n            <div className=\"commentslikes\">\r\n              {/** start reply */}\r\n              <button className=\"comment\"\r\n                      type=\"button\"\r\n                      onClick={openReplyModal}\r\n                      style={{\r\n                        display:\r\n                          disableReply ? \"none\" : \"flex\"\r\n                      }}>\r\n                <i className=\"fa fa-comment\"></i>\r\n              </button>\r\n              {/** end reply */}\r\n\r\n              {/** start retweet */}\r\n              <button\r\n                className=\"comment\"\r\n                disabled={\r\n                  (retweetActionLoading.postLoading)\r\n                  ||\r\n                  (\r\n                    (!retweetData && username === localStorage.getItem(\"userName\"))\r\n                    ||\r\n                    (retweetData && retweetData.postedBy.username === localStorage.getItem(\"userName\"))\r\n                  )\r\n                }\r\n                style={{\r\n                  color:\r\n                    retweetUsers.findIndex(\r\n                      (x) =>\r\n                        x.username ===\r\n                        (loggedInUsername || localStorage.getItem(\"userName\"))\r\n                    ) > -1\r\n                      ? \"green\"\r\n                      : \"black\",\r\n                  display:\r\n                    (replyTo && replyTo.originalPost) || type === \"replyPost\" ? \"none\" : \"flex\",\r\n                }}\r\n                onClick={retweet}\r\n              >\r\n                <i className=\"fa fa-retweet\"></i>\r\n                <span className=\"number\">{retweetUsers.length}</span>\r\n              </button>\r\n              {/** end retweet */}\r\n\r\n              {/** start like */}\r\n              <button\r\n                className=\"comment\"\r\n                disabled={\r\n                  postActionLoading.postLoading &&\r\n                  postActionLoading.postId === postId\r\n                }\r\n                onClick={likePost}\r\n                style={{\r\n                  color:\r\n                    likes.findIndex(\r\n                      (x) =>\r\n                        x.username ===\r\n                        (loggedInUsername || localStorage.getItem(\"userName\"))\r\n                    ) > -1\r\n                      ? \"red\"\r\n                      : \"black\",\r\n                }}\r\n              >\r\n                <i className=\"far fa-heart\"></i>\r\n                <span className=\"number\">{likes.length}</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {replymodalOpen && (\r\n        <ReplyModal\r\n          profilePic={content ? profilePic : retweetData.postedBy.profilePic}\r\n          content={content ? content : retweetData.content}\r\n          firstName={content ? firstName : retweetData.postedBy.firstName}\r\n          lastName={content ? lastName : retweetData.postedBy.lastName}\r\n          username={content ? username : retweetData.postedBy.username}\r\n          retweetedFirstName={!content && firstName}\r\n          retweetedLastName={!content && lastName}\r\n          createdAt={createdAt}\r\n          closeModel={closeModel}\r\n          postId={postId}\r\n          submitReplyReq={submitReplyReq}\r\n        />\r\n      )}\r\n      {deletemodalOpen.open && <DeleteModal deletePost={deletePostReq} modalType={deletemodalOpen.type} pinPostReq={pinPostReq} closeDeleteModel={closeDeleteModel} /> }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"],"sourceRoot":""}
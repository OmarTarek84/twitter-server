{"version":3,"sources":["store/Actions/actionTypes.js","history.js","components/Spinner/Spinner.js","axios.js","components/Header/Header.js","App.js","store/Reducers/post.js","store/Reducers/user.js","store/Reducers/userSearch.js","store/Reducers/index.js","index.js"],"names":["USER_ERROR","CLEAR_USER_ERROR","AUTH_LOADING","SIGNUP","LOGIN","LOGOUT","CREATE_POST","DELETE_POST","POST_ERROR","FETCH_POSTS","POST_LOADING","LIKE_POST","RETWEET_POST","UNRETWEET_POST","RETWEET_LOADING","REPLY_TO_POST","VIEW_SINGLE_POST","FOLLOW_USER","CHANGE_PROFILE_PIC","CHANGE_COVER_PHOTO","PIN_POST","FETCH_USERS","USERS_LOADING","createBrowserHistory","Spinner","width","className","style","height","instance","axios","create","baseURL","axiosInstance","interceptor","interceptors","response","use","error","status","history","push","localStorage","removeItem","eject","Promise","reject","createAxiosResponseInterceptor","Header","dispatch","useDispatch","userDetails","useSelector","state","user","to","onClick","username","getItem","type","Login","lazy","Signup","Homepage","ViewPost","Profile","FollowList","Search","App","props","location","useLocation","path","pathname","useEffect","a","get","headers","Authorization","data","setItem","email","firstName","lastName","profilePic","token","console","log","getUser","backgroundColor","justifyContent","fallback","display","flexDirection","component","exact","autoClose","require","initialState","posts","currentPage","pageSize","pages","totalItemsCount","errorMessage","postActionLoading","postId","postLoading","retweetActionLoading","postReducer","action","post","allPosts","length","targetPostIndex","findIndex","p","_id","likeUserFoundIndex","likes","like","splice","originalPost","find","originalPostId","replies","foundMyPost","foundReplyPostIndex","allPostForRetweet","allPostsToRet","map","retweetData","retweetUsers","postedBy","newlyAddedPost","allPostsToUnretweet","filteredPosts","filter","deletedPostId","allPostsToUnRet","re","allPostsToReply","postIdReplyOriginal","replyTo","foundPostToReplyIndex","allPostsForDelteReply","targetPostForDeleteReplyIndex","rep","filteredPostsAfterDelte","isAuthenticated","authLoading","userReducer","pinnedPost","pinnedpostRetweet","retweets","retweet","pinnedPostUnretweet","followingUser","newfollowingUser","following","foundFollowingIndex","coverPhoto","pintype","users","currentPageUser","pageSizeUser","pagesUser","totalItemsCountUser","userLoading","userSearchReducer","combineReducers","userSearch","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32d1bbc9.chunk.js","sourcesContent":["export const USER_ERROR = 'USER_ERROR';\r\nexport const CLEAR_USER_ERROR = 'CLEAR_USER_ERROR';\r\nexport const AUTH_LOADING = 'AUTH_LOADING';\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\nexport const CREATE_POST = 'CREATE_POST';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const FETCH_POSTS = 'FETCH_POSTS';\r\nexport const POST_LOADING = 'POST_LOADING';\r\n\r\nexport const LIKE_POST = 'LIKE_POST';\r\n\r\nexport const RETWEET_POST = 'RETWEET_POST';\r\nexport const UNRETWEET_POST = 'UNRETWEET_POST';\r\nexport const RETWEET_LOADING = 'RETWEET_LOADING';\r\n\r\nexport const REPLY_TO_POST = 'REPLY_TO_POST';\r\n\r\nexport const VIEW_SINGLE_POST = 'VIEW_SINGLE_POST';\r\n\r\nexport const FOLLOW_USER = 'FOLLOW_USER';\r\n\r\nexport const CHANGE_PROFILE_PIC = 'CHANGE_PROFILE_PIC';\r\nexport const CHANGE_COVER_PHOTO = 'CHANGE_COVER_PHOTO';\r\n\r\nexport const PIN_POST = 'PIN_POST';\r\n\r\n\r\nexport const FETCH_USERS = 'FETCH_USERS';\r\nexport const USERS_LOADING = 'USERS_LOADING';","import {createBrowserHistory} from 'history';\r\n\r\nexport default createBrowserHistory();","import React from \"react\";\r\nimport \"./Spinner.scss\";\r\n\r\nconst Spinner = ({width}) => {\r\n  return <div className=\"loader\" style={{width: width, height: width}}>Loading...</div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import axios from \"axios\";\r\nimport history from \"./history\";\r\n\r\nlet instance = axios.create({\r\n  baseURL: process.env.NODE_ENV === 'development' ? \"http://localhost:8080\": \"/\",\r\n});\r\n\r\nfunction createAxiosResponseInterceptor(axiosInstance) {\r\n  const interceptor = axiosInstance.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      // Reject promise if usual error\r\n      if (error.response && error.response.status === 403) {\r\n        history.push(\"/login\");\r\n        localStorage.removeItem(\"accessToken\");\r\n        localStorage.removeItem(\"email\");\r\n        localStorage.removeItem(\"userName\");\r\n        localStorage.removeItem(\"firstName\");\r\n        localStorage.removeItem(\"lastName\");\r\n        localStorage.removeItem(\"profilePic\");\r\n      }\r\n      axiosInstance.interceptors.response.eject(interceptor);\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n}\r\n\r\ncreateAxiosResponseInterceptor(instance);\r\nexport default instance;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Header.scss\";\r\nimport history from '../../history';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LOGOUT } from \"../../store/Actions/actionTypes\";\r\n\r\nconst Header = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const {userDetails} = useSelector(state => state.user);\r\n\r\n  const goToProfile = () => {\r\n    history.push(`/profile/${userDetails.username || localStorage.getItem('userName')}`);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('email');\r\n    localStorage.removeItem('userName');\r\n    localStorage.removeItem('firstName');\r\n    localStorage.removeItem('lastName');\r\n    localStorage.removeItem('profilePic');\r\n    history.push('/login');\r\n    dispatch({type: LOGOUT});\r\n  };\r\n\r\n  return (\r\n    <header className=\"col-md-1\">\r\n      <div className=\"navItem\">\r\n        <Link to=\"/\">\r\n          <i className=\"fab fa-twitter\"></i>\r\n        </Link>\r\n      </div>\r\n      <div className=\"navItem\">\r\n        <Link to=\"/\">\r\n          <i className=\"fa fa-home\"></i>\r\n        </Link>\r\n      </div>\r\n      <div className=\"navItem\">\r\n        <Link to=\"/search\">\r\n          <i className=\"fa fa-search\"></i>\r\n        </Link>\r\n      </div>\r\n      <div className=\"navItem\">\r\n        <Link to=\"/\">\r\n          <i className=\"fa fa-bell\"></i>\r\n        </Link>\r\n        <span className=\"no\">0</span>\r\n      </div>\r\n      <div className=\"navItem\" onClick={goToProfile}>\r\n        <Link to=\"/\">\r\n          <i className=\"fa fa-user\"></i>\r\n        </Link>\r\n      </div>\r\n      <div className=\"navItem\">\r\n        <button onClick={logout}>\r\n          <i className=\"fa fa-sign-out-alt\"></i>\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { lazy, Suspense, useEffect } from \"react\";\nimport { Switch, Route, useLocation } from \"react-router-dom\";\nimport \"./App.scss\";\nimport Header from \"./components/Header/Header\";\nimport axios from './axios';\nimport { useDispatch } from \"react-redux\";\nimport { LOGIN } from \"./store/Actions/actionTypes\";\nimport history from './history';\nimport { ToastContainer } from \"react-toastify\";\nimport Spinner from \"./components/Spinner/Spinner\";\n\nconst Login = lazy(() => import(\"./components/Auth/Login/Login\"));\nconst Signup = lazy(() => import(\"./components/Auth/Signup/Signup\"));\nconst Homepage = lazy(() => import(\"./components/Homepage/Homepage\"));\nconst ViewPost = lazy(() => import(\"./components/ViewPost/ViewPost\"));\nconst Profile = lazy(() => import(\"./components/Profile/Profile\"));\nconst FollowList = lazy(() => import(\"./components/FollowList/FollowList\"));\nconst Search = lazy(() => import(\"./components/Search/Search\"));\n\nconst App = (props) => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const path = location.pathname;\n\n  const renderHeader = () => {\n    if (path !== \"/login\" && path !== \"/signup\") {\n      return <Header />;\n    } else {\n      return null;\n    }\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem('accessToken') && localStorage.getItem('email')) {\n      const getUser = async () => {\n        try {\n          const response = await axios.get('/user/getUserByToken', {\n            headers: {\n              Authorization: 'Bearer ' + localStorage.getItem('accessToken')\n            }\n          });\n          const userDetails = response.data;\n          localStorage.setItem('email', userDetails.email);\n          localStorage.setItem('userName', userDetails.username);\n          localStorage.setItem('firstName', userDetails.firstName);\n          localStorage.setItem('lastName', userDetails.lastName);\n          localStorage.setItem('profilePic', userDetails.profilePic);\n          dispatch({\n              type: LOGIN,\n              token: localStorage.getItem('accessToken'),\n              userDetails: userDetails\n          });\n        } catch(err) {\n          console.log(err);\n          history.push('/login');\n        }\n      };\n      getUser();\n    }\n  }, [dispatch]);\n\n  return (\n    <div className=\"container-fluid\" style={{\n      backgroundColor: path === \"/login\" || path === \"/signup\" ? \"#0099ff\" : \"white\",\n    }}>\n      <div className=\"container\">\n        <div\n          className=\"allParent row\"\n          style={{\n            justifyContent:\n              path === \"/login\" || path === \"/signup\" ? \"center\" : null,\n          }}\n        >\n          {renderHeader()}\n          <Suspense fallback={<Spinner />}>\n            <main\n              className=\"col-md-9\"\n              style={{\n                display:\n                  path === \"/login\" || path === \"/signup\" ? \"flex\" : \"block\",\n                flexDirection:\n                  path === \"/login\" || path === \"/signup\" ? \"column\" : null,\n                justifyContent:\n                  path === \"/login\" || path === \"/signup\" ? \"center\" : null,\n              }}\n            >\n              <Switch>\n                <Route path=\"/signup\" component={Signup} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/post/:postId\" component={ViewPost} />\n                <Route path=\"/profile/:username/follow\" exact component={FollowList} />\n                <Route path=\"/profile/:username\" exact component={Profile} />\n                <Route path=\"/search\" exact component={Search} />\n                <Route path=\"/\" exact component={Homepage} />\n              </Switch>\n            </main>\n          </Suspense>\n          {path !== \"/login\" && path !== \"/signup\" && (\n            <div className=\"empty col-md-2\"></div>\n          )}\n        </div>\n      </div>\n      <ToastContainer autoClose={4000} />\n    </div>\n  );\n};\n\nexport default App;\n","const {\r\n  CREATE_POST,\r\n  FETCH_POSTS,\r\n  POST_ERROR,\r\n  LIKE_POST,\r\n  DELETE_POST,\r\n  RETWEET_POST,\r\n  UNRETWEET_POST,\r\n  RETWEET_LOADING,\r\n  REPLY_TO_POST,\r\n  POST_LOADING\r\n} = require(\"../Actions/actionTypes\");\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  currentPage: 1,\r\n  pageSize: 30,\r\n  pages: 1,\r\n  totalItemsCount: 10,\r\n  errorMessage: null,\r\n  postActionLoading: {\r\n    postId: null,\r\n    postLoading: false,\r\n  },\r\n  retweetActionLoading: {\r\n    postId: null,\r\n    postLoading: false,\r\n  },\r\n  postLoading: false\r\n};\r\n\r\nconst postReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CREATE_POST:\r\n      return {\r\n        ...state,\r\n        posts: [action.post, ...state.posts],\r\n        errorMessage: null,\r\n      };\r\n    case POST_LOADING:\r\n      return {\r\n        ...state,\r\n        postLoading: true\r\n      };\r\n    case FETCH_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: [...action.posts],\r\n        errorMessage: null,\r\n        postLoading: false,\r\n        currentPage: action.currentPage,\r\n        pageSize: action.pageSize,\r\n        pages: action.pages,\r\n        totalItemsCount: action.totalItemsCount\r\n      };\r\n    case LIKE_POST:\r\n      const allPosts = [...state.posts];\r\n      if (allPosts.length > 0) {\r\n        const targetPostIndex = allPosts.findIndex(\r\n          (p) => p._id === action.postId\r\n        );\r\n        if (targetPostIndex > -1) {\r\n          const likeUserFoundIndex = allPosts[targetPostIndex].likes.findIndex(like => like.username === action.like.username);\r\n          if (likeUserFoundIndex > -1) {\r\n            allPosts[targetPostIndex].likes.splice(likeUserFoundIndex, 1);\r\n          } else {\r\n            allPosts[targetPostIndex].likes.push(action.like);\r\n          }\r\n\r\n          const originalPost = allPosts.find(p => p._id === action.originalPostId);\r\n          if (originalPost && originalPost.replies && originalPost.replies.length > 0) {\r\n            const foundMyPost = originalPost.replies.find(post => post._id === action.postId);\r\n            const foundReplyPostIndex = foundMyPost.likes.findIndex(like => like.username === action.like.username);\r\n            if (foundReplyPostIndex > -1) {\r\n              foundMyPost.likes.splice(foundReplyPostIndex, 1);\r\n            } else {\r\n              foundMyPost.likes.push(action.like);\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        posts: allPosts,\r\n        postActionLoading: {\r\n          postId: null,\r\n          postLoading: false,\r\n        },\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        errorMessage: action.errorMessage,\r\n        postLoading: false\r\n      };\r\n    case RETWEET_LOADING:\r\n      return {\r\n        ...state,\r\n        retweetActionLoading: {\r\n          postId: action.postId,\r\n          postLoading: true,\r\n        },\r\n      };\r\n    case RETWEET_POST:\r\n      const allPostForRetweet = [...state.posts];\r\n      if (allPostForRetweet.length > 0) {\r\n        const allPostsToRet = allPostForRetweet.map((p) => {\r\n          if (p.retweetData) {\r\n            if (\r\n              p.retweetData._id === action.postId ||\r\n              p._id === action.postId\r\n            ) {\r\n              return {\r\n                ...p,\r\n                retweetUsers: [action.postedBy, ...p.retweetUsers],\r\n              };\r\n            } else {\r\n              return { ...p };\r\n            }\r\n          } else {\r\n            if (p._id === action.postId) {\r\n              return {\r\n                ...p,\r\n                retweetUsers: [action.postedBy, ...p.retweetUsers],\r\n              };\r\n            } else {\r\n              return { ...p };\r\n            }\r\n          }\r\n        });\r\n\r\n        return {\r\n          ...state,\r\n          posts: [action.newlyAddedPost, ...allPostsToRet],\r\n          errorMessage: null,\r\n          retweetActionLoading: {\r\n            postId: null,\r\n            postLoading: false,\r\n          },\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          posts: [...state.posts],\r\n          errorMessage: null,\r\n          retweetActionLoading: {\r\n            postId: null,\r\n            postLoading: false,\r\n          },\r\n        };\r\n      }\r\n    case UNRETWEET_POST:\r\n      const allPostsToUnretweet = [...state.posts];\r\n      const filteredPosts = allPostsToUnretweet.filter(\r\n        (p) => p._id !== action.deletedPostId\r\n      );\r\n\r\n      const allPostsToUnRet = filteredPosts.map((p) => {\r\n        if (p.retweetData) {\r\n          if (\r\n            p.retweetData._id === action.originalPostId ||\r\n            p._id === action.originalPostId\r\n          ) {\r\n            return {\r\n              ...p,\r\n              retweetUsers: p.retweetUsers.filter(\r\n                (re) => re.username !== localStorage.getItem('userName')\r\n              ),\r\n            };\r\n          } else {\r\n            return { ...p };\r\n          }\r\n        } else {\r\n          if (p._id === action.originalPostId) {\r\n            return {\r\n              ...p,\r\n              retweetUsers: p.retweetUsers.filter(\r\n                (re) => re.username !== localStorage.getItem('userName')\r\n              ),\r\n            };\r\n          } else {\r\n            return { ...p };\r\n          }\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        posts: allPostsToUnRet,\r\n        retweetActionLoading: {\r\n          postId: null,\r\n          postLoading: false,\r\n        },\r\n      };\r\n    case REPLY_TO_POST:\r\n      const allPostsToReply = [...state.posts];\r\n      const postIdReplyOriginal = action.post.replyTo\r\n        ? action.post.replyTo.originalPost._id\r\n        : action.originalPostId;\r\n      const foundPostToReplyIndex = allPostsToReply.findIndex(\r\n        (p) => p._id === postIdReplyOriginal\r\n      );\r\n      if (foundPostToReplyIndex > -1) {\r\n        allPostsToReply[foundPostToReplyIndex].replies.push(action.post);\r\n      }\r\n      return {\r\n        ...state,\r\n        posts:\r\n          state.posts.length > 0\r\n            ? [action.post, ...allPostsToReply]\r\n            : [...state.posts],\r\n      };\r\n    case DELETE_POST:\r\n      const allPostsForDelteReply = [...state.posts];\r\n      if (action.originalPostId) {\r\n          const targetPostForDeleteReplyIndex = allPostsForDelteReply.findIndex(\r\n            (post) => post._id === action.originalPostId\r\n          );\r\n          if (targetPostForDeleteReplyIndex > -1) {\r\n            allPostsForDelteReply[targetPostForDeleteReplyIndex].replies = \r\n                      allPostsForDelteReply[targetPostForDeleteReplyIndex].replies.filter(rep => rep._id !== action.postId);\r\n          }\r\n        \r\n      }\r\n      const filteredPostsAfterDelte = allPostsForDelteReply.filter((p) => p._id !== action.postId);\r\n      return {\r\n        ...state,\r\n        posts: filteredPostsAfterDelte,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default postReducer;\r\n","const {\r\n  LOGIN,\r\n  USER_ERROR,\r\n  CLEAR_USER_ERROR,\r\n  RETWEET_POST,\r\n  UNRETWEET_POST,\r\n  LOGOUT,\r\n  FOLLOW_USER,\r\n  AUTH_LOADING,\r\n  CHANGE_PROFILE_PIC,\r\n  CHANGE_COVER_PHOTO,\r\n  PIN_POST,\r\n  LIKE_POST,\r\n} = require(\"../Actions/actionTypes\");\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  errorMessage: null,\r\n  token: null,\r\n  userDetails: null,\r\n  authLoading: false,\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n        isAuthenticated: true,\r\n        errorMessage: null,\r\n        userDetails: action.userDetails,\r\n        authLoading: false,\r\n      };\r\n    case AUTH_LOADING:\r\n      return {\r\n        ...state,\r\n        authLoading: true,\r\n      };\r\n    case USER_ERROR:\r\n      return {\r\n        ...state,\r\n        errorMessage: action.errorMessage,\r\n        authLoading: false,\r\n      };\r\n    case CLEAR_USER_ERROR:\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n      };\r\n    case RETWEET_POST:\r\n      if (\r\n        !state.userDetails ||\r\n        !state.userDetails.pinnedPost ||\r\n        state.userDetails.pinnedPost._id !== action.postId\r\n      ) {\r\n        return {\r\n          ...state,\r\n          userDetails: {\r\n            ...state.userDetails,\r\n            retweets: [action.retweet, ...state.userDetails.retweets],\r\n          },\r\n        };\r\n      } else {\r\n        const pinnedpostRetweet = [{...state.userDetails.pinnedPost}].map((p) => {\r\n          if (p.retweetData) {\r\n            if (\r\n              p.retweetData._id === action.postId ||\r\n              p._id === action.postId\r\n            ) {\r\n              return {\r\n                ...p,\r\n                retweetUsers: [action.postedBy, ...p.retweetUsers],\r\n              };\r\n            } else {\r\n              return { ...p };\r\n            }\r\n          } else {\r\n            if (p._id === action.postId) {\r\n              return {\r\n                ...p,\r\n                retweetUsers: [action.postedBy, ...p.retweetUsers],\r\n              };\r\n            } else {\r\n              return { ...p };\r\n            }\r\n          }\r\n        });\r\n        return {\r\n          ...state,\r\n          userDetails: {\r\n            ...state.userDetails,\r\n            retweets: [action.retweet, ...state.userDetails.retweets],\r\n            pinnedPost: pinnedpostRetweet[0]\r\n          },\r\n        };\r\n      }\r\n    case UNRETWEET_POST:\r\n      if (\r\n        !state.userDetails ||\r\n        !state.userDetails.pinnedPost ||\r\n        state.userDetails.pinnedPost._id !== action.originalPostId\r\n      ) {\r\n        return {\r\n          ...state,\r\n          userDetails: {\r\n            ...state.userDetails,\r\n            retweets: [\r\n              ...state.userDetails.retweets.filter(\r\n                (p) => p !== action.deletedPostId\r\n              ),\r\n            ],\r\n          },\r\n        };\r\n      } else {  \r\n        const pinnedPostUnretweet = [{...state.userDetails.pinnedPost}].map((p) => {\r\n          if (p.retweetData) {\r\n            if (\r\n              p.retweetData._id === action.originalPostId ||\r\n              p._id === action.originalPostId\r\n            ) {\r\n              return {\r\n                ...p,\r\n                retweetUsers: p.retweetUsers.filter(\r\n                  (re) => re.username !== localStorage.getItem('userName')\r\n                ),\r\n              };\r\n            } else {\r\n              return { ...p };\r\n            }\r\n          } else {\r\n            if (p._id === action.originalPostId) {\r\n              return {\r\n                ...p,\r\n                retweetUsers: p.retweetUsers.filter(\r\n                  (re) => re.username !== localStorage.getItem('userName')\r\n                ),\r\n              };\r\n            } else {\r\n              return { ...p };\r\n            }\r\n          }\r\n        });\r\n        return {\r\n          ...state,\r\n          userDetails: {\r\n            ...state.userDetails,\r\n            retweets: [\r\n              ...state.userDetails.retweets.filter(\r\n                (p) => p !== action.deletedPostId\r\n              ),\r\n            ],\r\n            pinnedPost: pinnedPostUnretweet[0]\r\n          },\r\n        };\r\n      }\r\n      case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        errorMessage: null,\r\n        token: null,\r\n        userDetails: null,\r\n        authLoading: false,\r\n      };\r\n    case FOLLOW_USER:\r\n      const followingUser = action.newfollowingUser;\r\n      let following = [...state.userDetails.following];\r\n      const foundFollowingIndex = following.findIndex(\r\n        (p) => p.username === followingUser.username\r\n      );\r\n      console.log(foundFollowingIndex);\r\n      if (foundFollowingIndex > -1) {\r\n        following.splice(foundFollowingIndex, 1);\r\n      } else {\r\n        following.push(action.newfollowingUser);\r\n      }\r\n      return {\r\n        ...state,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          following: following,\r\n        },\r\n      };\r\n    case CHANGE_PROFILE_PIC:\r\n      return {\r\n        ...state,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          profilePic: action.profilePic,\r\n        },\r\n      };\r\n    case LIKE_POST:\r\n      if (\r\n        !state.userDetails ||\r\n        !state.userDetails.pinnedPost ||\r\n        state.userDetails.pinnedPost._id !== action.postId\r\n      ) {\r\n        return { ...state };\r\n      }\r\n      const pinnedPost = { ...state.userDetails.pinnedPost };\r\n      const likeUserFoundIndex = pinnedPost.likes.findIndex(\r\n        (like) => like.username === action.like.username\r\n      );\r\n      if (likeUserFoundIndex > -1) {\r\n        pinnedPost.likes.splice(likeUserFoundIndex, 1);\r\n      } else {\r\n        pinnedPost.likes.push(action.like);\r\n      }\r\n      return {\r\n        ...state,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          pinnedPost: pinnedPost,\r\n        },\r\n      };\r\n    case CHANGE_COVER_PHOTO:\r\n      return {\r\n        ...state,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          coverPhoto: action.coverPhoto,\r\n        },\r\n      };\r\n    case PIN_POST:\r\n      if (action.pintype === 'add') {\r\n        return {\r\n          ...state,\r\n          userDetails: {\r\n            ...state.userDetails,\r\n            pinnedPost: action.pinnedPost,\r\n          },\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          userDetails: {\r\n            ...state.userDetails,\r\n            pinnedPost: null,\r\n          },\r\n        };\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { FETCH_USERS, USERS_LOADING } from \"../Actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  currentPageUser: 1,\r\n  pageSizeUser: 30,\r\n  pagesUser: 1,\r\n  totalItemsCountUser: 10,\r\n  userLoading: false,\r\n};\r\n\r\nconst userSearchReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USERS_LOADING:\r\n      return {\r\n        ...state,\r\n        userLoading: true,\r\n      };\r\n    case FETCH_USERS:\r\n      return {\r\n        ...state,\r\n        users: [...action.userDetails],\r\n        userLoading: false,\r\n        currentPageUser: action.currentPageUser,\r\n        pageSizeUser: action.pageSizeUser,\r\n        pagesUser: action.pagesUser,\r\n        totalItemsCountUser: action.totalItemsCountUser,\r\n      };\r\n    default:\r\n        return state;\r\n  }\r\n};\r\n\r\nexport default userSearchReducer;\r\n","import {combineReducers} from 'redux';\r\nimport postReducer from './post';\r\nimport userReducer from './user';\r\nimport userSearchReducer from './userSearch';\r\n\r\nexport default combineReducers({\r\n    user: userReducer,\r\n    post: postReducer,\r\n    userSearch: userSearchReducer\r\n});","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport rootReducer from \"./store/Reducers/index\";\nimport thunk from \"redux-thunk\";\nimport history from \"./history\";\nimport { Router } from \"react-router-dom\";\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n"],"sourceRoot":""}
{"version":3,"sources":["store/Actions/user.js","components/AuthHelpers/Input/Input.js","components/AuthHelpers/Form/Form.js","pages/Auth/Login/Login.js"],"names":["signup","formData","dispatch","getState","a","axios","post","history","push","type","USER_ERROR","errorMessage","response","data","message","login","AUTH_LOADING","localStorage","setItem","accessToken","userDetails","email","username","firstName","lastName","profilePic","LOGIN","token","pinPostUser","postId","put","headers","Authorization","user","getItem","console","log","PIN_POST","pinnedPost","pintype","searchUsers","currentPage","pageSize","search","filterUsernames","USERS_LOADING","get","FETCH_USERS","currentPageUser","pageSizeUser","pagesUser","pages","totalItemsCountUser","totalItemsCount","Input","name","placeholder","validationRules","register","errors","ref","className","Form","submitForm","defaultValues","inputs","submitBtnText","authLoading","useForm","handleSubmit","watch","renderInputs","map","input","validate","value","onSubmit","disabled","Login","emitLoginSocket","useSelector","state","useDispatch","useEffect","CLEAR_USER_ERROR","then","password","required","pattern","to"],"mappings":"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","file":"static/js/11.4b2ab6f5.chunk.js","sourcesContent":["import axios from '../../axios';\r\nimport { AUTH_LOADING, FETCH_USERS, LOGIN, PIN_POST, USERS_LOADING, USER_ERROR } from './actionTypes';\r\nimport history from '../../history';\r\n\r\nexport const signup = formData => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            await axios.post('/auth/signup', formData);\r\n            history.push('/login');\r\n        } catch(err) {\r\n            dispatch({\r\n                type: USER_ERROR,\r\n                errorMessage: err.response && err.response.data && err.response.data.message ? err.response.data.message: err.message\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const login = formData => {\r\n    return async (dispatch, getState) => {\r\n        dispatch({\r\n            type: AUTH_LOADING\r\n        });\r\n        try {\r\n            const response = await axios.post('/auth/login', formData);\r\n            localStorage.setItem('accessToken', response.data.accessToken);\r\n            localStorage.setItem('email', response.data.userDetails.email);\r\n            localStorage.setItem('userName', response.data.userDetails.username);\r\n            localStorage.setItem('firstName', response.data.userDetails.firstName);\r\n            localStorage.setItem('lastName', response.data.userDetails.lastName);\r\n            localStorage.setItem('profilePic', response.data.userDetails.profilePic);\r\n            history.push('/');\r\n            dispatch({\r\n                type: LOGIN,\r\n                token: response.data.accessToken,\r\n                userDetails: response.data.userDetails\r\n            });\r\n        } catch(err) {\r\n            dispatch({\r\n                type: USER_ERROR,\r\n                errorMessage: err.response && err.response.data && err.response.data.message ? err.response.data.message: err.message\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport const pinPostUser = postId => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const response = await axios.put('/user/pinPost', {postId}, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + (getState().user.token || localStorage.getItem('accessToken'))\r\n                }\r\n            });\r\n            console.log(response.data);\r\n            dispatch({\r\n                type: PIN_POST,\r\n                pinnedPost: response.data.pinnedPost,\r\n                pintype: response.data.type\r\n            });\r\n        } catch(err) {\r\n            dispatch({\r\n                type: USER_ERROR,\r\n                errorMessage: err.response && err.response.data && err.response.data.message ? err.response.data.message: err.message\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport const searchUsers = (currentPage, pageSize, search, filterUsernames) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({\r\n                type: USERS_LOADING\r\n            });\r\n            const response = await axios.get(`/user/search?currentPage=${currentPage}&pageSize=${pageSize}&search=${search}&filterUsernames=${filterUsernames}`, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + (getState().user.token || localStorage.getItem('accessToken'))\r\n                }\r\n            });\r\n            console.log('SEARCH USERS RESULT', response.data);\r\n            dispatch({\r\n                type: FETCH_USERS,\r\n                userDetails: response.data.userDetails,\r\n                currentPageUser: response.data.currentPage,\r\n                pageSizeUser: response.data.pageSize,\r\n                pagesUser: response.data.pages,\r\n                totalItemsCountUser: response.data.totalItemsCount,\r\n            });\r\n        } catch(err) {\r\n            dispatch({\r\n                type: USER_ERROR,\r\n                errorMessage: err.response && err.response.data && err.response.data.message ? err.response.data.message: err.message\r\n            });\r\n        }\r\n    };\r\n};","import React from \"react\";\r\nimport \"./Input.scss\";\r\n\r\nconst Input = ({type, name, placeholder, validationRules, register, errors}) => {\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        ref={register(validationRules)}\r\n      />\r\n      {errors && errors[name] && (\r\n        <p className=\"error\">{errors[name].message}</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport \"./Form.scss\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Input from \"../Input/Input\";\r\n\r\nconst Form = ({ submitForm, defaultValues, inputs, errorMessage, submitBtnText, authLoading }) => {\r\n  const { handleSubmit, register, errors, watch } = useForm({\r\n    defaultValues: defaultValues,\r\n  });\r\n\r\n  const renderInputs = inputs.map((input) => {\r\n    return (\r\n      <div className=\"inputParent\" key={input.name}>\r\n        <Input\r\n          type={input.type}\r\n          placeholder={input.placeholder}\r\n          name={input.name}\r\n          validationRules={\r\n            input.name === \"confirmPassword\" ? {\r\n                ...input.validationRules,\r\n                validate: (value) => value === watch('password') || \"Passwords don't match.\"\r\n            } : input.validationRules\r\n          }\r\n          register={register}\r\n          errors={errors}\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <form className=\"authForm\" onSubmit={handleSubmit(submitForm)}>\r\n      {renderInputs}\r\n      {errorMessage && <p className=\"err\">{errorMessage}</p>}\r\n      <button type=\"submit\" disabled={authLoading}>{submitBtnText}</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CLEAR_USER_ERROR } from \"../../../store/Actions/actionTypes\";\r\nimport { login } from \"../../../store/Actions/user\";\r\nimport Form from \"../../../components/AuthHelpers/Form/Form\";\r\nimport \"./Login.scss\";\r\n\r\nconst Login = ({emitLoginSocket}) => {\r\n\r\n  const { errorMessage, authLoading } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch({type: CLEAR_USER_ERROR});\r\n  }, [dispatch]);\r\n\r\n  const defaultValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const inputs = [\r\n    {\r\n      name: \"email\",\r\n      placeholder: \"Email\",\r\n      type: \"email\",\r\n      validationRules: {\r\n        required: \"Email Is Required\",\r\n        pattern: {\r\n          value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n          message: \"Entered value does not match email format\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: \"password\",\r\n      placeholder: \"Password\",\r\n      type: \"password\",\r\n      validationRules: {\r\n        required: \"Password Is Required\",\r\n      },\r\n    },\r\n  ];\r\n\r\n  const submitForm = (formData) => {\r\n    dispatch(login(formData)).then(() => {\r\n      emitLoginSocket(formData.email);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h2>Login</h2>\r\n      <Form\r\n        submitForm={submitForm}\r\n        defaultValues={defaultValues}\r\n        inputs={inputs}\r\n        submitBtnText='Login'\r\n        errorMessage={errorMessage}\r\n        authLoading={authLoading}\r\n      />\r\n      <Link to=\"/signup\">Don't Have Account? Create New Account</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}
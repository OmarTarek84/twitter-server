{"version":3,"sources":["components/Header/Header.js","shared/NotificationToast/NotificationToast.js","shared/ProtectedRoute.js","App.js","store/Reducers/chat.js","store/Reducers/notifications.js","store/Reducers/post.js","store/Reducers/user.js","store/Reducers/userSearch.js","store/Reducers/index.js","index.js","axios.js","components/Spinner/Spinner.js","shared/socketCustomHook.js","store/Actions/actionTypes.js","history.js"],"names":["Header","dispatch","useDispatch","userDetails","useSelector","state","user","className","to","numberOfNotifications","onClick","history","push","username","localStorage","getItem","socketIOClient","emit","removeItem","type","LOGOUT","NotificationToast","profilePic","text","src","alt","ProtectedRoute","Component","component","token","rest","render","props","pathname","from","location","Login","lazy","Signup","Homepage","ViewPost","Profile","FollowList","Search","Messages","NewMessage","MessageChat","Notifications","NotFound","App","useLocation","socket","useSocket","path","useEffect","a","axios","get","headers","Authorization","response","data","setItem","email","firstName","lastName","current","on","indexOf","SEND_MESSAGE","message","content","_id","Date","createdAt","updatedAt","sender","readBy","chat","chatId","error","ADD_NOTIFICATION","notification","postId","opened","userFrom","notificationType","toast","followUsername","LOGIN","console","log","getUser","style","backgroundColor","justifyContent","fallback","Spinner","display","flexDirection","exact","autoClose","hideProgressBar","initialState","chatError","chatLoading","messages","currentMessagesPage","messagesPageSize","totalMessagesCount","totalMessagesPages","chatReducer","action","CHAT_MESSAGES_ERROR","CHAT_LOADING","FETCH_CHAT_MESSAGES","reverse","currentPage","pageSize","messagesCount","pages","CHANGE_CHAT_NAME","chatName","newMessages","length","slice","SEND_MESSAGE_ERROR","allMsgs","MsgIndx","findIndex","msg","msgId","CLEAR_MESSAGES","require","FETCH_NOTIFICATIONS","NOTIFICATIONS_LOADING","MARK_READ","notifications","totalItemsCount","notificationsLoading","notificationsReducer","notsAfterMarkRead","markAll","map","targetedNotificationIndex","n","notificationId","CREATE_POST","FETCH_POSTS","POST_ERROR","LIKE_POST","DELETE_POST","RETWEET_POST","UNRETWEET_POST","RETWEET_LOADING","REPLY_TO_POST","POST_LOADING","posts","errorMessage","postActionLoading","postLoading","retweetActionLoading","postReducer","post","allPosts","targetPostIndex","p","likeUserFoundIndex","likes","like","splice","originalPost","find","originalPostId","replies","foundMyPost","foundReplyPostIndex","allPostForRetweet","allPostsToRet","retweetData","retweetUsers","postedBy","newlyAddedPost","allPostsToUnretweet","filteredPosts","filter","deletedPostId","allPostsToUnRet","re","allPostsToReply","postIdReplyOriginal","replyTo","foundPostToReplyIndex","allPostsForDelteReply","targetPostForDeleteReplyIndex","rep","filteredPostsAfterDelte","USER_ERROR","CLEAR_USER_ERROR","FOLLOW_USER","AUTH_LOADING","CHANGE_PROFILE_PIC","CHANGE_COVER_PHOTO","PIN_POST","CREATE_CHAT","UPDATE_LATEST_MESSAGE","isAuthenticated","authLoading","userReducer","pinnedPost","pinnedpostRetweet","retweets","retweet","pinnedPostUnretweet","followingUser","newfollowingUser","following","foundFollowingIndex","coverPhoto","pintype","chats","allChats","chatInd","latestMessage","users","currentPageUser","pageSizeUser","pagesUser","totalItemsCountUser","userLoading","userSearchReducer","USERS_LOADING","FETCH_USERS","CLEAR_USER_SEARCH","combineReducers","userSearch","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","document","getElementById","instance","create","baseURL","axiosInstance","interceptor","interceptors","use","status","eject","Promise","reject","createAxiosResponseInterceptor","width","height","useRef","transports","close","SIGNUP","VIEW_SINGLE_POST","createBrowserHistory"],"mappings":"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","file":"static/js/main.80a4a3b8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Header.scss\";\r\nimport history from \"../../history\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LOGOUT } from \"../../store/Actions/actionTypes\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const { userDetails } = useSelector((state) => state.user);\r\n\r\n  const goToProfile = () => {\r\n    history.push(\r\n      `/profile/${userDetails.username || localStorage.getItem(\"userName\")}`\r\n    );\r\n  };\r\n\r\n  const logout = () => {\r\n    const SOCKETENDPOINT =\r\n      process.env.NODE_ENV === \"development\" ? \"http://localhost:8080\" : \"/\";\r\n    const socket = socketIOClient(SOCKETENDPOINT);\r\n    socket.emit(\"loggedout\", localStorage.getItem(\"email\"));\r\n    localStorage.removeItem(\"accessToken\");\r\n    localStorage.removeItem(\"email\");\r\n    localStorage.removeItem(\"userName\");\r\n    localStorage.removeItem(\"firstName\");\r\n    localStorage.removeItem(\"lastName\");\r\n    localStorage.removeItem(\"profilePic\");\r\n    history.push(\"/login\");\r\n    dispatch({ type: LOGOUT });\r\n  };\r\n\r\n  return (\r\n    <header className=\"col-md-1\">\r\n      <div className=\"navItem\">\r\n        <Link to=\"/\">\r\n          <i className=\"fab fa-twitter\"></i>\r\n        </Link>\r\n      </div>\r\n      <div className=\"navItem\">\r\n        <Link to=\"/\">\r\n          <i className=\"fa fa-home\"></i>\r\n        </Link>\r\n      </div>\r\n      <div className=\"navItem\">\r\n        <Link to=\"/search\">\r\n          <i className=\"fa fa-search\"></i>\r\n        </Link>\r\n      </div>\r\n      <div className=\"navItem\">\r\n        <Link to=\"/notifications\">\r\n          <i className=\"fa fa-bell\"></i>\r\n        </Link>\r\n        {userDetails &&\r\n        userDetails.numberOfNotifications &&\r\n        userDetails.numberOfNotifications > 0 ? (\r\n          <span className=\"no\">{userDetails.numberOfNotifications}</span>\r\n        ) : null}\r\n      </div>\r\n      <div className=\"navItem\">\r\n        <Link to=\"/messages\">\r\n          <i className=\"fa fa-envelope\"></i>\r\n        </Link>\r\n      </div>\r\n      <div className=\"navItem\" onClick={goToProfile}>\r\n        <Link to=\"/\">\r\n          <i className=\"fa fa-user\"></i>\r\n        </Link>\r\n      </div>\r\n      <div className=\"navItem\">\r\n        <button onClick={logout}>\r\n          <i className=\"fa fa-sign-out-alt\"></i>\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './NotificationToast.scss';\r\n\r\nconst NotificationToast = ({profilePic, text}) => {\r\n    return (\r\n        <div className=\"toastNot\">\r\n            <img src={profilePic} alt=\"alt\" />\r\n            <p>{text}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NotificationToast;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction ProtectedRoute({\r\n  component: Component,\r\n  token: token,\r\n  ...rest\r\n}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (token) {\r\n          return <Component {...props} />;\r\n        } else {\r\n          return (\r\n            <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ProtectedRoute;","/* eslint-disable */\nimport React, { lazy, Suspense, useEffect } from \"react\";\nimport { Switch, Route, useLocation } from \"react-router-dom\";\nimport \"./App.scss\";\nimport Header from \"./components/Header/Header\";\nimport axios from \"./axios\";\nimport { useDispatch } from \"react-redux\";\nimport { ADD_NOTIFICATION, LOGIN, SEND_MESSAGE } from \"./store/Actions/actionTypes\";\nimport history from \"./history\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Spinner from \"./components/Spinner/Spinner\";\nimport useSocket from \"./shared/socketCustomHook\";\nimport NotificationToast from \"./shared/NotificationToast/NotificationToast\";\nimport ProtectedRoute from './shared/ProtectedRoute';\n\nconst Login = lazy(() => import(\"./pages/Auth/Login/Login\"));\nconst Signup = lazy(() => import(\"./pages/Auth/Signup/Signup\"));\nconst Homepage = lazy(() => import(\"./pages/Homepage/Homepage\"));\nconst ViewPost = lazy(() => import(\"./pages/ViewPost/ViewPost\"));\nconst Profile = lazy(() => import(\"./pages/Profile/Profile\"));\nconst FollowList = lazy(() => import(\"./pages/FollowList/FollowList\"));\nconst Search = lazy(() => import(\"./pages/Search/Search\"));\nconst Messages = lazy(() => import(\"./pages/Messages/Messages\"));\nconst NewMessage = lazy(() => import(\"./pages/NewMessage/NewMessage\"));\nconst MessageChat = lazy(() => import(\"./pages/MessageChat/MessageChat\"));\nconst Notifications = lazy(() => import(\"./pages/Notifications/Notifications\"));\nconst NotFound = lazy(() => import(\"./pages/NotFound/NotFound\"));\n\nconst App = (props) => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const {socket} = useSocket();\n\n  const path = location.pathname;\n\n  const renderHeader = () => {\n    if (path !== \"/login\" && path !== \"/signup\") {\n      return <Header />;\n    } else {\n      return null;\n    }\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"accessToken\") && localStorage.getItem(\"email\")) {\n      const getUser = async () => {\n        try {\n          const response = await axios.get(\"/user/getUserByToken\", {\n            headers: {\n              Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\"),\n            },\n          });\n          const userDetails = response.data;\n          localStorage.setItem(\"email\", userDetails.email);\n          localStorage.setItem(\"userName\", userDetails.username);\n          localStorage.setItem(\"firstName\", userDetails.firstName);\n          localStorage.setItem(\"lastName\", userDetails.lastName);\n          localStorage.setItem(\"profilePic\", userDetails.profilePic);\n          socket.current.emit(\"loggedin\", userDetails.email);\n          socket.current.on(\"message received\", (data) => {\n            if (path.indexOf('/chat') > -1) {\n              dispatch({\n                type: SEND_MESSAGE,\n                message: {\n                  content: data.content,\n                  _id: new Date(),\n                  createdAt: data.createdAt,\n                  updatedAt: data.createdAt,\n                  sender: data.sender,\n                  readBy: [],\n                  chat: data.chatId,\n                  error: false\n                },\n              });\n            }\n          });\n          socket.current.on('notification received', data => {\n            if (data.type !== 'newMessage') {\n              dispatch({\n                type: ADD_NOTIFICATION,\n                notification: {\n                  _id: data.postId ? data.postId: data.chatId,\n                  opened: false,\n                  userFrom: {\n                    firstName: data.firstName,\n                    lastName: data.lastName,\n                    profilePic: data.profilePic,\n                  },\n                  notificationType: data.type === 'like' ? 'postLike': data.type,\n                  postId: data.postId,\n                  chatId: data.chatId,\n                  createdAt: new Date()\n                }\n              });\n            }\n            if (data.type === 'newMessage' && history.location.pathname.indexOf('/chat') > -1) {\n              return;\n            } else {\n              toast(<NotificationToast text={data.text} profilePic={data.profilePic} />, {\n                onClick: () => {\n                  if (data.type === \"retweet\" || data.type === 'like' || data.type === 'reply') {\n                    history.push(`/post/${data.postId}`);\n                  } else if (data.type === \"follow\") {\n                    history.push(`/profile/${data.followUsername}`);\n                  } else if (data.type === \"newMessage\") {\n                    history.push(`/chat/${data.chatId}`);\n                  }\n                },\n              });\n            }\n          });\n          dispatch({\n            type: LOGIN,\n            token: localStorage.getItem(\"accessToken\"),\n            userDetails: userDetails,\n          });\n        } catch (err) {\n          console.log(err);\n          history.push(\"/login\");\n        }\n      };\n      getUser();\n    }\n  }, [dispatch]);\n\n  return (\n    <div\n      className=\"container-fluid\"\n      style={{\n        backgroundColor:\n          path === \"/login\" || path === \"/signup\" ? \"#0099ff\" : \"white\",\n      }}\n    >\n      <div className=\"container\">\n        <div\n          className=\"allParent row\"\n          style={{\n            justifyContent:\n              path === \"/login\" || path === \"/signup\" ? \"center\" : null,\n          }}\n        >\n          {renderHeader()}\n          <Suspense fallback={<Spinner />}>\n            <main\n              className=\"col-md-9\"\n              style={{\n                display:\n                  path === \"/login\" || path === \"/signup\" ? \"flex\" : \"block\",\n                flexDirection:\n                  path === \"/login\" || path === \"/signup\" ? \"column\" : null,\n                justifyContent:\n                  path === \"/login\" || path === \"/signup\" ? \"center\" : null,\n              }}\n            >\n              <Switch>\n                <Route path=\"/signup\" component={Signup} />\n                <Route path=\"/login\" component={Login} />\n                <ProtectedRoute\n                  token={localStorage.getItem('accessToken')}\n                  path=\"/post/:postId\"\n                  component={ViewPost}\n                  exact\n                />\n                <ProtectedRoute\n                  token={localStorage.getItem('accessToken')}\n                  path=\"/profile/:username/follow\"\n                  component={FollowList}\n                  exact\n                />\n                <ProtectedRoute\n                  token={localStorage.getItem('accessToken')}\n                  path=\"/profile/:username\"\n                  component={Profile}\n                  exact\n                />\n                <ProtectedRoute\n                  token={localStorage.getItem('accessToken')}\n                  path=\"/messages/new\"\n                  component={NewMessage}\n                  exact\n                />\n                <ProtectedRoute\n                  token={localStorage.getItem('accessToken')}\n                  path=\"/messages\"\n                  component={Messages}\n                  exact\n                />\n                <ProtectedRoute\n                  token={localStorage.getItem('accessToken')}\n                  path=\"/chat/:id\"\n                  component={MessageChat}\n                  exact\n                />\n                <ProtectedRoute\n                  token={localStorage.getItem('accessToken')}\n                  path=\"/search\"\n                  component={Search}\n                  exact\n                />\n                <ProtectedRoute\n                  token={localStorage.getItem('accessToken')}\n                  path=\"/\"\n                  component={Homepage}\n                  exact\n                />\n                <ProtectedRoute\n                  token={localStorage.getItem('accessToken')}\n                  path=\"/notifications\"\n                  component={Notifications}\n                  exact\n                />\n                <Route path=\"*\" component={NotFound} />\n              </Switch>\n            </main>\n          </Suspense>\n          {path !== \"/login\" && path !== \"/signup\" && (\n            <div className=\"empty col-md-2\"></div>\n          )}\n        </div>\n      </div>\n      <ToastContainer autoClose={4000} hideProgressBar={true} />\n    </div>\n  );\n};\n\nexport default App;\n","import { CHAT_LOADING, CHAT_MESSAGES_ERROR, FETCH_CHAT_MESSAGES, CHANGE_CHAT_NAME, SEND_MESSAGE, SEND_MESSAGE_ERROR, CLEAR_MESSAGES } from \"../Actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    chatError: null,\r\n    chatLoading: false,\r\n    chat: null,\r\n    messages: [],\r\n    currentMessagesPage: 1,\r\n    messagesPageSize: 60,\r\n    totalMessagesCount: 60,\r\n    totalMessagesPages: 10\r\n};\r\n\r\nconst chatReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHAT_MESSAGES_ERROR:\r\n            return {\r\n                ...state,\r\n                chatError: action.error,\r\n                chatLoading: false\r\n            };\r\n        case CHAT_LOADING:\r\n            return {\r\n                ...state,\r\n                chatLoading: true,\r\n                chatError: null,\r\n            };\r\n        case FETCH_CHAT_MESSAGES:\r\n            return {\r\n                ...state,\r\n                chatLoading: false,\r\n                chat: action.chat,\r\n                messages: [...action.messages.reverse(), ...state.messages ],\r\n                currentMessagesPage: action.currentPage,\r\n                messagesPageSize: action.pageSize,\r\n                totalMessagesCount: action.messagesCount,\r\n                totalMessagesPages: action.pages\r\n            };\r\n        case CHANGE_CHAT_NAME:\r\n            return {\r\n                ...state,\r\n                chat: {\r\n                    ...state.chat,\r\n                    chatName: action.chatName\r\n                }\r\n            };\r\n        case SEND_MESSAGE:\r\n            let newMessages;\r\n            if (state.messages.length >= 30) {\r\n                if (state.currentMessagesPage === state.totalMessagesPages) {\r\n                    newMessages = [\r\n                        ...state.messages,\r\n                        action.message,\r\n                    ];\r\n                } else {\r\n                    // if there's pagination left\r\n                    newMessages = [\r\n                        ...state.messages.slice(1),\r\n                        action.message\r\n                    ];\r\n                }\r\n            } else {\r\n                newMessages = [\r\n                    ...state.messages,\r\n                    action.message,\r\n                ];\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: newMessages\r\n            };\r\n        case SEND_MESSAGE_ERROR:\r\n            const allMsgs = [...state.messages];\r\n            const MsgIndx = allMsgs.findIndex(msg => msg._id === action.msgId);\r\n            allMsgs[MsgIndx].error = true;\r\n            return {\r\n                ...state,\r\n                messages: allMsgs\r\n            };\r\n        case CLEAR_MESSAGES:\r\n            return {\r\n                ...state,\r\n                messages: [],\r\n                chat: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default chatReducer;","const { FETCH_NOTIFICATIONS, NOTIFICATIONS_LOADING, MARK_READ, ADD_NOTIFICATION } = require(\"../Actions/actionTypes\");\r\n\r\nconst initialState = {\r\n    notifications: [],\r\n    currentPage: 1,\r\n    pageSize: 30,\r\n    pages: 1,\r\n    totalItemsCount: 10,\r\n    notificationsLoading: false,\r\n};\r\n\r\nconst notificationsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case NOTIFICATIONS_LOADING:\r\n            return {\r\n                ...state,\r\n                notificationsLoading: true\r\n            };\r\n        case FETCH_NOTIFICATIONS:\r\n            return {\r\n                ...state,\r\n                notificationsLoading: false,\r\n                notifications: action.notifications,\r\n                currentPage: action.currentPage,\r\n                pageSize: action.pageSize,\r\n                pages: action.pages,\r\n                totalItemsCount: action.totalItemsCount,\r\n            };\r\n        case MARK_READ:\r\n            let notsAfterMarkRead = [...state.notifications];\r\n            if (action.markAll === true) {\r\n                notsAfterMarkRead = notsAfterMarkRead.map(notification => {\r\n                    return {\r\n                        ...notification,\r\n                        opened: true\r\n                    };\r\n                });\r\n            } else {\r\n                const targetedNotificationIndex = notsAfterMarkRead.findIndex(n => n._id === action.notificationId);\r\n                notsAfterMarkRead[targetedNotificationIndex].opened = true;\r\n            }\r\n            return {\r\n                ...state,\r\n                notifications: notsAfterMarkRead\r\n            };\r\n        case ADD_NOTIFICATION:\r\n            return {\r\n                ...state,\r\n                notifications: [action.notification, ...state.notifications]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default notificationsReducer;","const {\r\n  CREATE_POST,\r\n  FETCH_POSTS,\r\n  POST_ERROR,\r\n  LIKE_POST,\r\n  DELETE_POST,\r\n  RETWEET_POST,\r\n  UNRETWEET_POST,\r\n  RETWEET_LOADING,\r\n  REPLY_TO_POST,\r\n  POST_LOADING\r\n} = require(\"../Actions/actionTypes\");\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  currentPage: 1,\r\n  pageSize: 30,\r\n  pages: 1,\r\n  totalItemsCount: 10,\r\n  errorMessage: null,\r\n  postActionLoading: {\r\n    postId: null,\r\n    postLoading: false,\r\n  },\r\n  retweetActionLoading: {\r\n    postId: null,\r\n    postLoading: false,\r\n  },\r\n  postLoading: false\r\n};\r\n\r\nconst postReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CREATE_POST:\r\n      return {\r\n        ...state,\r\n        posts: [action.post, ...state.posts],\r\n        errorMessage: null,\r\n      };\r\n    case POST_LOADING:\r\n      return {\r\n        ...state,\r\n        postLoading: true\r\n      };\r\n    case FETCH_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: [...action.posts],\r\n        errorMessage: null,\r\n        postLoading: false,\r\n        currentPage: action.currentPage,\r\n        pageSize: action.pageSize,\r\n        pages: action.pages,\r\n        totalItemsCount: action.totalItemsCount\r\n      };\r\n    case LIKE_POST:\r\n      const allPosts = [...state.posts];\r\n      if (allPosts.length > 0) {\r\n        const targetPostIndex = allPosts.findIndex(\r\n          (p) => p._id === action.postId\r\n        );\r\n        if (targetPostIndex > -1) {\r\n          const likeUserFoundIndex = allPosts[targetPostIndex].likes.findIndex(like => like.username === action.like.username);\r\n          if (likeUserFoundIndex > -1) {\r\n            allPosts[targetPostIndex].likes.splice(likeUserFoundIndex, 1);\r\n          } else {\r\n            allPosts[targetPostIndex].likes.push(action.like);\r\n          }\r\n\r\n          const originalPost = allPosts.find(p => p._id === action.originalPostId);\r\n          if (originalPost && originalPost.replies && originalPost.replies.length > 0) {\r\n            const foundMyPost = originalPost.replies.find(post => post._id === action.postId);\r\n            const foundReplyPostIndex = foundMyPost.likes.findIndex(like => like.username === action.like.username);\r\n            if (foundReplyPostIndex > -1) {\r\n              foundMyPost.likes.splice(foundReplyPostIndex, 1);\r\n            } else {\r\n              foundMyPost.likes.push(action.like);\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        posts: allPosts,\r\n        postActionLoading: {\r\n          postId: null,\r\n          postLoading: false,\r\n        },\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        errorMessage: action.errorMessage,\r\n        postLoading: false\r\n      };\r\n    case RETWEET_LOADING:\r\n      return {\r\n        ...state,\r\n        retweetActionLoading: {\r\n          postId: action.postId,\r\n          postLoading: true,\r\n        },\r\n      };\r\n    case RETWEET_POST:\r\n      const allPostForRetweet = [...state.posts];\r\n      if (allPostForRetweet.length > 0) {\r\n        const allPostsToRet = allPostForRetweet.map((p) => {\r\n          if (p.retweetData) {\r\n            if (\r\n              p.retweetData._id === action.postId ||\r\n              p._id === action.postId\r\n            ) {\r\n              return {\r\n                ...p,\r\n                retweetUsers: [action.postedBy, ...p.retweetUsers],\r\n              };\r\n            } else {\r\n              return { ...p };\r\n            }\r\n          } else {\r\n            if (p._id === action.postId) {\r\n              return {\r\n                ...p,\r\n                retweetUsers: [action.postedBy, ...p.retweetUsers],\r\n              };\r\n            } else {\r\n              return { ...p };\r\n            }\r\n          }\r\n        });\r\n\r\n        return {\r\n          ...state,\r\n          posts: [action.newlyAddedPost, ...allPostsToRet],\r\n          errorMessage: null,\r\n          retweetActionLoading: {\r\n            postId: null,\r\n            postLoading: false,\r\n          },\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          posts: [...state.posts],\r\n          errorMessage: null,\r\n          retweetActionLoading: {\r\n            postId: null,\r\n            postLoading: false,\r\n          },\r\n        };\r\n      }\r\n    case UNRETWEET_POST:\r\n      const allPostsToUnretweet = [...state.posts];\r\n      const filteredPosts = allPostsToUnretweet.filter(\r\n        (p) => p._id !== action.deletedPostId\r\n      );\r\n\r\n      const allPostsToUnRet = filteredPosts.map((p) => {\r\n        if (p.retweetData) {\r\n          if (\r\n            p.retweetData._id === action.originalPostId ||\r\n            p._id === action.originalPostId\r\n          ) {\r\n            return {\r\n              ...p,\r\n              retweetUsers: p.retweetUsers.filter(\r\n                (re) => re.username !== localStorage.getItem('userName')\r\n              ),\r\n            };\r\n          } else {\r\n            return { ...p };\r\n          }\r\n        } else {\r\n          if (p._id === action.originalPostId) {\r\n            return {\r\n              ...p,\r\n              retweetUsers: p.retweetUsers.filter(\r\n                (re) => re.username !== localStorage.getItem('userName')\r\n              ),\r\n            };\r\n          } else {\r\n            return { ...p };\r\n          }\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        posts: allPostsToUnRet,\r\n        retweetActionLoading: {\r\n          postId: null,\r\n          postLoading: false,\r\n        },\r\n      };\r\n    case REPLY_TO_POST:\r\n      const allPostsToReply = [...state.posts];\r\n      const postIdReplyOriginal = action.post.replyTo\r\n        ? action.post.replyTo.originalPost._id\r\n        : action.originalPostId;\r\n      const foundPostToReplyIndex = allPostsToReply.findIndex(\r\n        (p) => p._id === postIdReplyOriginal\r\n      );\r\n      if (foundPostToReplyIndex > -1) {\r\n        allPostsToReply[foundPostToReplyIndex].replies.push(action.post);\r\n      }\r\n      return {\r\n        ...state,\r\n        posts:\r\n          state.posts.length > 0\r\n            ? [action.post, ...allPostsToReply]\r\n            : [...state.posts],\r\n      };\r\n    case DELETE_POST:\r\n      const allPostsForDelteReply = [...state.posts];\r\n      if (action.originalPostId) {\r\n          const targetPostForDeleteReplyIndex = allPostsForDelteReply.findIndex(\r\n            (post) => post._id === action.originalPostId\r\n          );\r\n          if (targetPostForDeleteReplyIndex > -1) {\r\n            allPostsForDelteReply[targetPostForDeleteReplyIndex].replies = \r\n                      allPostsForDelteReply[targetPostForDeleteReplyIndex].replies.filter(rep => rep._id !== action.postId);\r\n          }\r\n        \r\n      }\r\n      const filteredPostsAfterDelte = allPostsForDelteReply.filter((p) => p._id !== action.postId);\r\n      return {\r\n        ...state,\r\n        posts: filteredPostsAfterDelte,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default postReducer;\r\n","const {\r\n  LOGIN,\r\n  USER_ERROR,\r\n  CLEAR_USER_ERROR,\r\n  RETWEET_POST,\r\n  UNRETWEET_POST,\r\n  LOGOUT,\r\n  FOLLOW_USER,\r\n  AUTH_LOADING,\r\n  CHANGE_PROFILE_PIC,\r\n  CHANGE_COVER_PHOTO,\r\n  PIN_POST,\r\n  LIKE_POST,\r\n  CREATE_CHAT,\r\n  UPDATE_LATEST_MESSAGE,\r\n  MARK_READ,\r\n  ADD_NOTIFICATION,\r\n} = require(\"../Actions/actionTypes\");\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  errorMessage: null,\r\n  token: null,\r\n  userDetails: null,\r\n  authLoading: false,\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n        isAuthenticated: true,\r\n        errorMessage: null,\r\n        userDetails: action.userDetails,\r\n        authLoading: false,\r\n      };\r\n    case AUTH_LOADING:\r\n      return {\r\n        ...state,\r\n        authLoading: true,\r\n      };\r\n    case USER_ERROR:\r\n      return {\r\n        ...state,\r\n        errorMessage: action.errorMessage,\r\n        authLoading: false,\r\n      };\r\n    case CLEAR_USER_ERROR:\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n      };\r\n    case RETWEET_POST:\r\n      if (\r\n        !state.userDetails ||\r\n        !state.userDetails.pinnedPost ||\r\n        state.userDetails.pinnedPost._id !== action.postId\r\n      ) {\r\n        return {\r\n          ...state,\r\n          userDetails: {\r\n            ...state.userDetails,\r\n            retweets: [action.retweet, ...state.userDetails.retweets],\r\n          },\r\n        };\r\n      } else {\r\n        const pinnedpostRetweet = [{...state.userDetails.pinnedPost}].map((p) => {\r\n          if (p.retweetData) {\r\n            if (\r\n              p.retweetData._id === action.postId ||\r\n              p._id === action.postId\r\n            ) {\r\n              return {\r\n                ...p,\r\n                retweetUsers: [action.postedBy, ...p.retweetUsers],\r\n              };\r\n            } else {\r\n              return { ...p };\r\n            }\r\n          } else {\r\n            if (p._id === action.postId) {\r\n              return {\r\n                ...p,\r\n                retweetUsers: [action.postedBy, ...p.retweetUsers],\r\n              };\r\n            } else {\r\n              return { ...p };\r\n            }\r\n          }\r\n        });\r\n        return {\r\n          ...state,\r\n          userDetails: {\r\n            ...state.userDetails,\r\n            retweets: [action.retweet, ...state.userDetails.retweets],\r\n            pinnedPost: pinnedpostRetweet[0]\r\n          },\r\n        };\r\n      }\r\n    case UNRETWEET_POST:\r\n      if (\r\n        !state.userDetails ||\r\n        !state.userDetails.pinnedPost ||\r\n        state.userDetails.pinnedPost._id !== action.originalPostId\r\n      ) {\r\n        return {\r\n          ...state,\r\n          userDetails: {\r\n            ...state.userDetails,\r\n            retweets: [\r\n              ...state.userDetails.retweets.filter(\r\n                (p) => p !== action.deletedPostId\r\n              ),\r\n            ],\r\n          },\r\n        };\r\n      } else {  \r\n        const pinnedPostUnretweet = [{...state.userDetails.pinnedPost}].map((p) => {\r\n          if (p.retweetData) {\r\n            if (\r\n              p.retweetData._id === action.originalPostId ||\r\n              p._id === action.originalPostId\r\n            ) {\r\n              return {\r\n                ...p,\r\n                retweetUsers: p.retweetUsers.filter(\r\n                  (re) => re.username !== localStorage.getItem('userName')\r\n                ),\r\n              };\r\n            } else {\r\n              return { ...p };\r\n            }\r\n          } else {\r\n            if (p._id === action.originalPostId) {\r\n              return {\r\n                ...p,\r\n                retweetUsers: p.retweetUsers.filter(\r\n                  (re) => re.username !== localStorage.getItem('userName')\r\n                ),\r\n              };\r\n            } else {\r\n              return { ...p };\r\n            }\r\n          }\r\n        });\r\n        return {\r\n          ...state,\r\n          userDetails: {\r\n            ...state.userDetails,\r\n            retweets: [\r\n              ...state.userDetails.retweets.filter(\r\n                (p) => p !== action.deletedPostId\r\n              ),\r\n            ],\r\n            pinnedPost: pinnedPostUnretweet[0]\r\n          },\r\n        };\r\n      }\r\n      case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        errorMessage: null,\r\n        token: null,\r\n        userDetails: null,\r\n        authLoading: false,\r\n      };\r\n    case FOLLOW_USER:\r\n      const followingUser = action.newfollowingUser;\r\n      let following = [...state.userDetails.following];\r\n      const foundFollowingIndex = following.findIndex(\r\n        (p) => p.username === followingUser.username\r\n      );\r\n      if (foundFollowingIndex > -1) {\r\n        following.splice(foundFollowingIndex, 1);\r\n      } else {\r\n        following.push(action.newfollowingUser);\r\n      }\r\n      return {\r\n        ...state,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          following: following,\r\n        },\r\n      };\r\n    case CHANGE_PROFILE_PIC:\r\n      return {\r\n        ...state,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          profilePic: action.profilePic,\r\n        },\r\n      };\r\n    case LIKE_POST:\r\n      if (\r\n        !state.userDetails ||\r\n        !state.userDetails.pinnedPost ||\r\n        state.userDetails.pinnedPost._id !== action.postId\r\n      ) {\r\n        return { ...state };\r\n      }\r\n      const pinnedPost = { ...state.userDetails.pinnedPost };\r\n      const likeUserFoundIndex = pinnedPost.likes.findIndex(\r\n        (like) => like.username === action.like.username\r\n      );\r\n      if (likeUserFoundIndex > -1) {\r\n        pinnedPost.likes.splice(likeUserFoundIndex, 1);\r\n      } else {\r\n        pinnedPost.likes.push(action.like);\r\n      }\r\n      return {\r\n        ...state,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          pinnedPost: pinnedPost,\r\n        },\r\n      };\r\n    case CHANGE_COVER_PHOTO:\r\n      return {\r\n        ...state,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          coverPhoto: action.coverPhoto,\r\n        },\r\n      };\r\n    case PIN_POST:\r\n      if (action.pintype === 'add') {\r\n        return {\r\n          ...state,\r\n          userDetails: {\r\n            ...state.userDetails,\r\n            pinnedPost: action.pinnedPost,\r\n          },\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          userDetails: {\r\n            ...state.userDetails,\r\n            pinnedPost: null,\r\n          },\r\n        };\r\n      };\r\n    case CREATE_CHAT:\r\n      return {\r\n        ...state,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          chats: [action.chat, ...state.userDetails.chats]\r\n        }\r\n      };\r\n    case UPDATE_LATEST_MESSAGE:\r\n      const allChats = [...state.userDetails.chats];\r\n      const chatInd = allChats.findIndex(chat => chat._id === action.chatId);\r\n      allChats[chatInd].latestMessage = {\r\n        content: action.content,\r\n        sender: {\r\n          firstName: action.user.firstName,\r\n          lastName: action.user.lastName,\r\n          username: action.user.username,\r\n          profilePic: action.user.profilePic,\r\n          coverPhoto: action.user.coverPhoto,\r\n        },\r\n        _id: new Date()\r\n      };\r\n      return {\r\n        ...state,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          chats: allChats\r\n        }\r\n      };\r\n    case MARK_READ:\r\n      return {\r\n        ...state,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          numberOfNotifications: action.markAll ? 0: state.userDetails.numberOfNotifications - 1\r\n        }\r\n      };\r\n    case ADD_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          numberOfNotifications: state.userDetails.numberOfNotifications+1\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import {\r\n  CLEAR_USER_SEARCH,\r\n  FETCH_USERS,\r\n  USERS_LOADING,\r\n} from \"../Actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  currentPageUser: 1,\r\n  pageSizeUser: 30,\r\n  pagesUser: 1,\r\n  totalItemsCountUser: 10,\r\n  userLoading: false,\r\n};\r\n\r\nconst userSearchReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USERS_LOADING:\r\n      return {\r\n        ...state,\r\n        userLoading: true,\r\n      };\r\n    case FETCH_USERS:\r\n      return {\r\n        ...state,\r\n        users: [...action.userDetails],\r\n        userLoading: false,\r\n        currentPageUser: action.currentPageUser,\r\n        pageSizeUser: action.pageSizeUser,\r\n        pagesUser: action.pagesUser,\r\n        totalItemsCountUser: action.totalItemsCountUser,\r\n      };\r\n    case CLEAR_USER_SEARCH:\r\n      return {\r\n        ...state,\r\n        users: [],\r\n        currentPageUser: 1,\r\n        pageSizeUser: 30,\r\n        pagesUser: 1,\r\n        totalItemsCountUser: 10,\r\n        userLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userSearchReducer;\r\n","import {combineReducers} from 'redux';\r\nimport chatReducer from './chat';\r\nimport notificationsReducer from './notifications';\r\nimport postReducer from './post';\r\nimport userReducer from './user';\r\nimport userSearchReducer from './userSearch';\r\n\r\nexport default combineReducers({\r\n    user: userReducer,\r\n    post: postReducer,\r\n    userSearch: userSearchReducer,\r\n    chat: chatReducer,\r\n    notification: notificationsReducer\r\n});","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport rootReducer from \"./store/Reducers/index\";\nimport thunk from \"redux-thunk\";\nimport history from \"./history\";\nimport { Router } from \"react-router-dom\";\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>\n);\n\nif (process.env.NODE_ENV !== 'development') {\n  console.log = () => {}\n}\n\nReactDOM.render(app, document.getElementById(\"root\"));\n","import axios from \"axios\";\r\nimport history from \"./history\";\r\n\r\nlet instance = axios.create({\r\n  baseURL: process.env.NODE_ENV === 'development' ? \"http://localhost:8080\": \"/\",\r\n});\r\n\r\nfunction createAxiosResponseInterceptor(axiosInstance) {\r\n  const interceptor = axiosInstance.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      // Reject promise if usual error\r\n      if (error.response && error.response.status === 403) {\r\n        history.push(\"/login\");\r\n        localStorage.removeItem(\"accessToken\");\r\n        localStorage.removeItem(\"email\");\r\n        localStorage.removeItem(\"userName\");\r\n        localStorage.removeItem(\"firstName\");\r\n        localStorage.removeItem(\"lastName\");\r\n        localStorage.removeItem(\"profilePic\");\r\n      }\r\n      axiosInstance.interceptors.response.eject(interceptor);\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n}\r\n\r\ncreateAxiosResponseInterceptor(instance);\r\nexport default instance;\r\n","import React from \"react\";\r\nimport \"./Spinner.scss\";\r\n\r\nconst Spinner = ({width}) => {\r\n  return <div className=\"loader\" style={{width: width, height: width}}>Loading...</div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import { useEffect, useRef } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nconst useSocket = () => {\r\n  const socket = useRef();\r\n  const SOCKETENDPOINT =\r\n    process.env.NODE_ENV === \"development\" ? \"http://localhost:8080\" : \"/\";\r\n  useEffect(() => {\r\n    socket.current = socketIOClient(SOCKETENDPOINT, {\r\n      transports: [\"websocket\"],\r\n    });\r\n    return () => {\r\n      socket.current.close();\r\n    };\r\n  }, []);\r\n\r\n  return { socket };\r\n};\r\n\r\nexport default useSocket;\r\n","export const USER_ERROR = 'USER_ERROR';\r\nexport const CLEAR_USER_ERROR = 'CLEAR_USER_ERROR';\r\nexport const AUTH_LOADING = 'AUTH_LOADING';\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\nexport const CREATE_POST = 'CREATE_POST';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const FETCH_POSTS = 'FETCH_POSTS';\r\nexport const POST_LOADING = 'POST_LOADING';\r\n\r\nexport const LIKE_POST = 'LIKE_POST';\r\n\r\nexport const RETWEET_POST = 'RETWEET_POST';\r\nexport const UNRETWEET_POST = 'UNRETWEET_POST';\r\nexport const RETWEET_LOADING = 'RETWEET_LOADING';\r\n\r\nexport const REPLY_TO_POST = 'REPLY_TO_POST';\r\n\r\nexport const VIEW_SINGLE_POST = 'VIEW_SINGLE_POST';\r\n\r\nexport const FOLLOW_USER = 'FOLLOW_USER';\r\n\r\nexport const CHANGE_PROFILE_PIC = 'CHANGE_PROFILE_PIC';\r\nexport const CHANGE_COVER_PHOTO = 'CHANGE_COVER_PHOTO';\r\n\r\nexport const PIN_POST = 'PIN_POST';\r\n\r\n\r\nexport const FETCH_USERS = 'FETCH_USERS';\r\nexport const USERS_LOADING = 'USERS_LOADING';\r\nexport const CLEAR_USER_SEARCH = 'CLEAR_USER_SEARCH';\r\n\r\n\r\nexport const CREATE_CHAT = 'CREATE_CHAT';\r\nexport const CHAT_LOADING = 'CHAT_LOADING';\r\nexport const FETCH_CHAT_MESSAGES = 'FETCH_CHAT_MESSAGES';\r\nexport const CHAT_MESSAGES_ERROR = 'CHAT_MESSAGES_ERROR';\r\nexport const CHANGE_CHAT_NAME = 'CHANGE_CHAT_NAME';\r\n\r\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\r\nexport const SEND_MESSAGE_ERROR = 'SEND_MESSAGE_ERROR';\r\nexport const UPDATE_LATEST_MESSAGE = 'UPDATE_LATEST_MESSAGE';\r\nexport const CLEAR_MESSAGES = 'CLEAR_MESSAGES';\r\n\r\n\r\nexport const NOTIFICATIONS_LOADING = 'NOTIFICATIONS_LOADING';\r\nexport const FETCH_NOTIFICATIONS = 'FETCH_NOTIFICATIONS';\r\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION';\r\nexport const MARK_READ = 'MARK_READ';","import {createBrowserHistory} from 'history';\r\n\r\nexport default createBrowserHistory();"],"sourceRoot":""}
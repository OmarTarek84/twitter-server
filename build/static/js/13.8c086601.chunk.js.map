{"version":3,"sources":["components/Paginate/Paginate.js","components/NotificationList/NotificationList.js","store/Actions/notification.js","pages/Notifications/Notifications.js"],"names":["Paginate","handlePageChange","pageSize","totalItemsCount","currentPage","itemClass","linkClass","activePage","itemsCountPerPage","pageRangeDisplayed","onChange","NotificationList","notifications","markReadNotifications","map","notification","notificationDetails","text","link","notificationType","postId","userId","username","chatId","activeClass","opened","className","onClick","history","push","_id","src","userFrom","profilePic","alt","firstName","lastName","fetchNotifications","dispatch","getState","a","type","NOTIFICATIONS_LOADING","axios","get","headers","Authorization","user","token","localStorage","getItem","data","FETCH_NOTIFICATIONS","pages","Notifications","useDispatch","useSelector","state","notificationsLoading","useEffect","markAll","notificationId","notificationOpened","MARK_READ","put","markRead","length","pageNumber","Spinner","width"],"mappings":"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","file":"static/js/13.8c086601.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Paginate.scss';\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nconst Paginate = ({handlePageChange, pageSize, totalItemsCount, currentPage }) => {\r\n    return (\r\n        <Pagination\r\n            itemClass=\"page-item\"\r\n            linkClass=\"page-link\"\r\n            activePage={currentPage}\r\n            itemsCountPerPage={pageSize}\r\n            totalItemsCount={totalItemsCount}\r\n            pageRangeDisplayed={10}\r\n            onChange={handlePageChange}\r\n      />\r\n    )\r\n};\r\n\r\nexport default Paginate;","import React from 'react';\r\nimport './NotificationList.scss';\r\nimport history from '../../history';\r\n\r\nconst NotificationList = ({notifications, markReadNotifications}) => {\r\n    const notificationList = notifications.map((notification) => {\r\n        \r\n        let notificationDetails = {\r\n            text: '',\r\n            link: '/'\r\n        };\r\n\r\n        if (notification.notificationType === 'retweet') {\r\n            notificationDetails = {\r\n                text: 'retweeted one of your posts',\r\n                link: `/post/${notification.postId}`\r\n            };\r\n        } else if (notification.notificationType === 'postLike') {\r\n            notificationDetails = {\r\n                text: 'liked one of your posts',\r\n                link: `/post/${notification.postId}`\r\n            };\r\n        } else if (notification.notificationType === 'follow') {\r\n            notificationDetails = {\r\n                text: 'followed you',\r\n                link: notification.userId ? `/profile/${notification.userId.username}`: '/'\r\n            };\r\n        } else if (notification.notificationType === 'newMessage') {\r\n            notificationDetails = {\r\n                text: 'sent a new message',\r\n                link: notification.chatId ? `/chat/${notification.chatId}`: '/'\r\n            };\r\n        } else if (notification.notificationType === 'reply') {\r\n            notificationDetails = {\r\n                text: 'replied to your post',\r\n                link: notification.postId ? `/post/${notification.postId}`: '/'\r\n            };\r\n        }\r\n\r\n        const activeClass = notification.opened ? '' : 'active';\r\n\r\n        const notificationClicked = () => {\r\n            history.push(notificationDetails.link);\r\n            markReadNotifications(false, notification._id, notification.opened);\r\n        };\r\n\r\n        return (\r\n            <div className={`notification ${activeClass}`} key={notification._id} onClick={notificationClicked}>\r\n                <img src={notification.userFrom.profilePic} alt={notification.userFrom.username} />\r\n                <p className=\"text\">{notification.userFrom.firstName} {notification.userFrom.lastName} {notificationDetails.text}</p>\r\n            </div>\r\n        )\r\n    });\r\n    return notificationList;\r\n};\r\n\r\nexport default NotificationList;","import axios from \"../../axios\";\r\nimport {FETCH_NOTIFICATIONS, NOTIFICATIONS_LOADING, MARK_READ} from './actionTypes';\r\n\r\nexport const fetchNotifications = (currentPage, pageSize) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({\r\n      type: NOTIFICATIONS_LOADING\r\n    });\r\n    const { data } = await axios.get(`/notifications?currentPage=${currentPage}&pageSize=${pageSize}`, {\r\n      headers: {\r\n        Authorization:\r\n          \"Bearer \" +\r\n          (getState().user.token || localStorage.getItem(\"accessToken\")),\r\n      },\r\n    });\r\n    dispatch({\r\n      type: FETCH_NOTIFICATIONS,\r\n      currentPage: data.currentPage,\r\n      notifications: data.notifications,\r\n      pageSize: data.pageSize,\r\n      pages: data.pages,\r\n      totalItemsCount: data.totalItemsCount,\r\n    });\r\n  };\r\n};\r\n\r\n\r\nexport const markRead = (markAll, notificationId, notificationOpened) => {\r\n  return async (dispatch, getState) => {\r\n    if (!notificationOpened) {\r\n      dispatch({\r\n        type: MARK_READ,\r\n        notificationId: notificationId,\r\n        markAll: markAll\r\n      });\r\n    }\r\n    await axios.put(`/notifications/${notificationId}/markRead?markAll=${markAll}`, {}, {\r\n      headers: {\r\n        Authorization:\r\n          \"Bearer \" +\r\n          (getState().user.token || localStorage.getItem(\"accessToken\")),\r\n      },\r\n    });\r\n  };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport NotificationList from \"../../components/NotificationList/NotificationList\";\r\nimport { fetchNotifications, markRead } from \"../../store/Actions/notification\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport Paginate from \"../../components/Paginate/Paginate\";\r\nimport \"./Notifications.scss\";\r\n\r\nconst Notifications = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    notifications,\r\n    notificationsLoading,\r\n    currentPage,\r\n    pageSize,\r\n    totalItemsCount,\r\n    pages,\r\n  } = useSelector((state) => state.notification);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchNotifications(1, 30));\r\n  }, [dispatch]);\r\n\r\n  const markReadNotifications = (markAll, notificationId, notificationOpened) => {\r\n    dispatch(markRead(markAll, notificationId, notificationOpened));\r\n  };\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    dispatch(fetchNotifications(pageNumber, 30));\r\n  };\r\n\r\n  return (\r\n    <div className=\"notificationsParent\">\r\n      <div className=\"title\">\r\n        <h2>Notifications</h2>\r\n        {notifications.length > 0 && (\r\n          <i\r\n            className=\"fas fa-check-double\"\r\n            onClick={() => markReadNotifications(true, null, false)}\r\n          ></i>\r\n        )}\r\n      </div>\r\n      {pages > 1 && !notificationsLoading && (\r\n        <div className=\"paginate\">\r\n          <Paginate\r\n            currentPage={currentPage}\r\n            pageSize={pageSize}\r\n            totalItemsCount={totalItemsCount}\r\n            handlePageChange={handlePageChange}\r\n          />\r\n        </div>\r\n      )}\r\n      {notificationsLoading ? (\r\n        <Spinner width=\"70px\" />\r\n      ) : notifications.length > 0 ? (\r\n        <NotificationList\r\n          notifications={notifications}\r\n          markReadNotifications={markReadNotifications}\r\n        />\r\n      ) : (\r\n        <h3 className=\"nonotifications\">No Notifications Yet</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n"],"sourceRoot":""}